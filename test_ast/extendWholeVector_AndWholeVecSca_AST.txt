TranslationUnitDecl 0x7fd4eb838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fd4eb8394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fd4eb8391a0 '__int128'
|-TypedefDecl 0x7fd4eb839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fd4eb8391c0 'unsigned __int128'
|-TypedefDecl 0x7fd4eb8397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fd4eb8395f0 'struct __NSConstantString_tag'
|   `-Record 0x7fd4eb839568 '__NSConstantString_tag'
|-TypedefDecl 0x7fd4eb839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fd4eb839850 'char *'
|   `-BuiltinType 0x7fd4eb838ca0 'char'
|-TypedefDecl 0x7fd4eb839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fd4eb839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fd4eb839970 'struct __va_list_tag'
|     `-Record 0x7fd4eb8398e8 '__va_list_tag'
|-TypedefDecl 0x7fd4eb891600 <./tree_src/extendWholeVector_AndWholeVecSca.c:3:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7fd4eb838d60 'unsigned char'
`-FunctionDecl 0x7fd4eb891bc8 <line:6:1, line:13:1> line:6:6 AndWholeVecSca 'void (int, BOOL *, BOOL, BOOL *)'
  |-ParmVarDecl 0x7fd4eb891670 <line:7:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fd4eb891880 <col:12, col:20> col:17 used x 'BOOL *':'BOOL *'
  |-ParmVarDecl 0x7fd4eb8918f8 <col:23, col:28> col:28 used y 'BOOL':'unsigned char'
  |-ParmVarDecl 0x7fd4eb891a80 <col:31, col:39> col:36 used z 'BOOL *':'BOOL *'
  `-CompoundStmt 0x7fd4eb892080 <col:43, line:13:1>
    |-DeclStmt 0x7fd4eb891d50 <line:9:5, col:10>
    | `-VarDecl 0x7fd4eb891ce8 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x7fd4eb892048 <line:10:5, line:12:5>
      |-BinaryOperator 0x7fd4eb891da8 <line:10:10, col:14> 'int' '='
      | |-DeclRefExpr 0x7fd4eb891d68 <col:10> 'int' lvalue Var 0x7fd4eb891ce8 'i' 'int'
      | `-IntegerLiteral 0x7fd4eb891d88 <col:14> 'int' 0
      |-<<<NULL>>>
      |-ImplicitCastExpr 0x7fd4eb891de8 <col:17> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x7fd4eb891dc8 <col:17> 'int' lvalue ParmVar 0x7fd4eb891670 'n' 'int'
      |-UnaryOperator 0x7fd4eb891e20 <col:20, col:22> 'int' prefix '++'
      | `-DeclRefExpr 0x7fd4eb891e00 <col:22> 'int' lvalue Var 0x7fd4eb891ce8 'i' 'int'
      `-CompoundStmt 0x7fd4eb892030 <col:26, line:12:5>
        `-BinaryOperator 0x7fd4eb892010 <line:11:9, col:23> 'BOOL':'unsigned char' '='
          |-ArraySubscriptExpr 0x7fd4eb891ea8 <col:9, col:12> 'BOOL':'unsigned char' lvalue
          | |-ImplicitCastExpr 0x7fd4eb891e78 <col:9> 'BOOL *':'BOOL *' <LValueToRValue>
          | | `-DeclRefExpr 0x7fd4eb891e38 <col:9> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fd4eb891a80 'z' 'BOOL *':'BOOL *'
          | `-ImplicitCastExpr 0x7fd4eb891e90 <col:11> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7fd4eb891e58 <col:11> 'int' lvalue Var 0x7fd4eb891ce8 'i' 'int'
          `-ImplicitCastExpr 0x7fd4eb891ff8 <col:16, col:23> 'BOOL':'unsigned char' <IntegralCast>
            `-BinaryOperator 0x7fd4eb891fd8 <col:16, col:23> 'int' '&'
              |-ImplicitCastExpr 0x7fd4eb891f90 <col:16, col:19> 'int' <IntegralCast>
              | `-ImplicitCastExpr 0x7fd4eb891f78 <col:16, col:19> 'BOOL':'unsigned char' <LValueToRValue>
              |   `-ArraySubscriptExpr 0x7fd4eb891f38 <col:16, col:19> 'BOOL':'unsigned char' lvalue
              |     |-ImplicitCastExpr 0x7fd4eb891f08 <col:16> 'BOOL *':'BOOL *' <LValueToRValue>
              |     | `-DeclRefExpr 0x7fd4eb891ec8 <col:16> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fd4eb891880 'x' 'BOOL *':'BOOL *'
              |     `-ImplicitCastExpr 0x7fd4eb891f20 <col:18> 'int' <LValueToRValue>
              |       `-DeclRefExpr 0x7fd4eb891ee8 <col:18> 'int' lvalue Var 0x7fd4eb891ce8 'i' 'int'
              `-ImplicitCastExpr 0x7fd4eb891fc0 <col:23> 'int' <IntegralCast>
                `-ImplicitCastExpr 0x7fd4eb891fa8 <col:23> 'BOOL':'unsigned char' <LValueToRValue>
                  `-DeclRefExpr 0x7fd4eb891f58 <col:23> 'BOOL':'unsigned char' lvalue ParmVar 0x7fd4eb8918f8 'y' 'BOOL':'unsigned char'
