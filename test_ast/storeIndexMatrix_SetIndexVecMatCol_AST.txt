TranslationUnitDecl 0x7f8c9b838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f8c9b8394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f8c9b8391a0 '__int128'
|-TypedefDecl 0x7f8c9b839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f8c9b8391c0 'unsigned __int128'
|-TypedefDecl 0x7f8c9b8397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f8c9b8395f0 'struct __NSConstantString_tag'
|   `-Record 0x7f8c9b839568 '__NSConstantString_tag'
|-TypedefDecl 0x7f8c9b839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f8c9b839850 'char *'
|   `-BuiltinType 0x7f8c9b838ca0 'char'
|-TypedefDecl 0x7f8c9b839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f8c9b839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f8c9b839970 'struct __va_list_tag'
|     `-Record 0x7f8c9b8398e8 '__va_list_tag'
`-FunctionDecl 0x7f8c9b890da8 <./tree_src/storeIndexMatrix_SetIndexVecMatCol.c:1:1, line:8:1> line:1:6 SetIndexVecMatCol 'void (int, int, double (*)[m], double *, int, int *, int *)'
  |-ParmVarDecl 0x7f8c9b890600 <line:2:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7f8c9b890680 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7f8c9b890880 <col:19, col:32> col:26 used x 'double (*)[m]':'double (*)[m]'
  |-ParmVarDecl 0x7f8c9b890a00 <col:35, col:45> col:42 used z 'double *':'double *'
  |-ParmVarDecl 0x7f8c9b890a80 <col:48, col:52> col:52 used p 'int'
  |-ParmVarDecl 0x7f8c9b890b30 <col:55, col:60> col:60 used ix 'int *'
  |-ParmVarDecl 0x7f8c9b890bb0 <col:64, col:69> col:69 used iz 'int *'
  `-CompoundStmt 0x7f8c9b891380 <col:74, line:8:1>
    |-DeclStmt 0x7f8c9b890f48 <line:4:5, col:10>
    | `-VarDecl 0x7f8c9b890ee0 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x7f8c9b891348 <line:5:5, line:7:5>
      |-BinaryOperator 0x7f8c9b890fa0 <line:5:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7f8c9b890f60 <col:10> 'int' lvalue Var 0x7f8c9b890ee0 'i' 'int'
      | `-IntegerLiteral 0x7f8c9b890f80 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7f8c9b891030 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7f8c9b891000 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7f8c9b890fc0 <col:16> 'int' lvalue Var 0x7f8c9b890ee0 'i' 'int'
      | `-ImplicitCastExpr 0x7f8c9b891018 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7f8c9b890fe0 <col:18> 'int' lvalue ParmVar 0x7f8c9b890600 'n' 'int'
      |-UnaryOperator 0x7f8c9b891070 <col:21, col:23> 'int' prefix '++'
      | `-DeclRefExpr 0x7f8c9b891050 <col:23> 'int' lvalue Var 0x7f8c9b890ee0 'i' 'int'
      `-CompoundStmt 0x7f8c9b891330 <col:27, line:7:5>
        `-BinaryOperator 0x7f8c9b891310 <line:6:9, col:29> 'double' '='
          |-ArraySubscriptExpr 0x7f8c9b891168 <col:9, col:16> 'double' lvalue
          | |-ImplicitCastExpr 0x7f8c9b891138 <col:9> 'double *':'double *' <LValueToRValue>
          | | `-DeclRefExpr 0x7f8c9b891088 <col:9> 'double *':'double *' lvalue ParmVar 0x7f8c9b890a00 'z' 'double *':'double *'
          | `-ImplicitCastExpr 0x7f8c9b891150 <col:11, col:15> 'int' <LValueToRValue>
          |   `-ArraySubscriptExpr 0x7f8c9b891118 <col:11, col:15> 'int' lvalue
          |     |-ImplicitCastExpr 0x7f8c9b8910e8 <col:11> 'int *' <LValueToRValue>
          |     | `-DeclRefExpr 0x7f8c9b8910a8 <col:11> 'int *' lvalue ParmVar 0x7f8c9b890bb0 'iz' 'int *'
          |     `-ImplicitCastExpr 0x7f8c9b891100 <col:14> 'int' <LValueToRValue>
          |       `-DeclRefExpr 0x7f8c9b8910c8 <col:14> 'int' lvalue Var 0x7f8c9b890ee0 'i' 'int'
          `-ImplicitCastExpr 0x7f8c9b8912f8 <col:19, col:29> 'double' <LValueToRValue>
            `-ArraySubscriptExpr 0x7f8c9b8912d8 <col:19, col:29> 'double' lvalue
              |-ImplicitCastExpr 0x7f8c9b8912a8 <col:19, col:26> 'double *' <ArrayToPointerDecay>
              | `-ArraySubscriptExpr 0x7f8c9b891268 <col:19, col:26> 'double [m]' lvalue
              |   |-ImplicitCastExpr 0x7f8c9b891238 <col:19> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
              |   | `-DeclRefExpr 0x7f8c9b891188 <col:19> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8c9b890880 'x' 'double (*)[m]':'double (*)[m]'
              |   `-ImplicitCastExpr 0x7f8c9b891250 <col:21, col:25> 'int' <LValueToRValue>
              |     `-ArraySubscriptExpr 0x7f8c9b891218 <col:21, col:25> 'int' lvalue
              |       |-ImplicitCastExpr 0x7f8c9b8911e8 <col:21> 'int *' <LValueToRValue>
              |       | `-DeclRefExpr 0x7f8c9b8911a8 <col:21> 'int *' lvalue ParmVar 0x7f8c9b890b30 'ix' 'int *'
              |       `-ImplicitCastExpr 0x7f8c9b891200 <col:24> 'int' <LValueToRValue>
              |         `-DeclRefExpr 0x7f8c9b8911c8 <col:24> 'int' lvalue Var 0x7f8c9b890ee0 'i' 'int'
              `-ImplicitCastExpr 0x7f8c9b8912c0 <col:28> 'int' <LValueToRValue>
                `-DeclRefExpr 0x7f8c9b891288 <col:28> 'int' lvalue ParmVar 0x7f8c9b890a80 'p' 'int'
