TranslationUnitDecl 0x7feb92838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7feb928394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7feb928391a0 '__int128'
|-TypedefDecl 0x7feb92839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7feb928391c0 'unsigned __int128'
|-TypedefDecl 0x7feb928397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7feb928395f0 'struct __NSConstantString_tag'
|   `-Record 0x7feb92839568 '__NSConstantString_tag'
|-TypedefDecl 0x7feb92839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7feb92839850 'char *'
|   `-BuiltinType 0x7feb92838ca0 'char'
|-TypedefDecl 0x7feb92839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7feb92839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7feb92839970 'struct __va_list_tag'
|     `-Record 0x7feb928398e8 '__va_list_tag'
|-TypedefDecl 0x7feb92891600 <./tree_src/unaryWholeVector_AllPrefixWholeVec.c:4:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7feb92838d60 'unsigned char'
`-FunctionDecl 0x7feb92891b38 <line:10:1, line:18:1> line:10:6 AllPrefixWholeVec 'void (int, BOOL *, BOOL *)'
  |-ParmVarDecl 0x7feb92891670 <line:11:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7feb92891880 <col:12, col:20> col:17 used x 'BOOL *':'BOOL *'
  |-ParmVarDecl 0x7feb92891a10 <col:23, col:31> col:28 used y 'BOOL *':'BOOL *'
  `-CompoundStmt 0x7feb92892218 <col:35, line:18:1>
    |-DeclStmt 0x7feb92891cb8 <line:13:5, col:10>
    | `-VarDecl 0x7feb92891c50 <col:5, col:9> col:9 used i 'int'
    |-BinaryOperator 0x7feb92891dd8 <line:14:5, col:15> 'BOOL':'unsigned char' '='
    | |-ArraySubscriptExpr 0x7feb92891d28 <col:5, col:8> 'BOOL':'unsigned char' lvalue
    | | |-ImplicitCastExpr 0x7feb92891d10 <col:5> 'BOOL *':'BOOL *' <LValueToRValue>
    | | | `-DeclRefExpr 0x7feb92891cd0 <col:5> 'BOOL *':'BOOL *' lvalue ParmVar 0x7feb92891a10 'y' 'BOOL *':'BOOL *'
    | | `-IntegerLiteral 0x7feb92891cf0 <col:7> 'int' 0
    | `-ImplicitCastExpr 0x7feb92891dc0 <col:12, col:15> 'BOOL':'unsigned char' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x7feb92891da0 <col:12, col:15> 'BOOL':'unsigned char' lvalue
    |     |-ImplicitCastExpr 0x7feb92891d88 <col:12> 'BOOL *':'BOOL *' <LValueToRValue>
    |     | `-DeclRefExpr 0x7feb92891d48 <col:12> 'BOOL *':'BOOL *' lvalue ParmVar 0x7feb92891880 'x' 'BOOL *':'BOOL *'
    |     `-IntegerLiteral 0x7feb92891d68 <col:14> 'int' 0
    `-ForStmt 0x7feb928921e0 <line:15:5, line:17:5>
      |-BinaryOperator 0x7feb92891e38 <line:15:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7feb92891df8 <col:10> 'int' lvalue Var 0x7feb92891c50 'i' 'int'
      | `-IntegerLiteral 0x7feb92891e18 <col:13> 'int' 1
      |-<<<NULL>>>
      |-BinaryOperator 0x7feb92891ec8 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7feb92891e98 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7feb92891e58 <col:16> 'int' lvalue Var 0x7feb92891c50 'i' 'int'
      | `-ImplicitCastExpr 0x7feb92891eb0 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7feb92891e78 <col:18> 'int' lvalue ParmVar 0x7feb92891670 'n' 'int'
      |-UnaryOperator 0x7feb92891f08 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x7feb92891ee8 <col:21> 'int' lvalue Var 0x7feb92891c50 'i' 'int'
      `-CompoundStmt 0x7feb928921c8 <col:27, line:17:5>
        `-BinaryOperator 0x7feb928921a8 <line:16:9, col:28> 'BOOL':'unsigned char' '='
          |-ArraySubscriptExpr 0x7feb92891f90 <col:9, col:12> 'BOOL':'unsigned char' lvalue
          | |-ImplicitCastExpr 0x7feb92891f60 <col:9> 'BOOL *':'BOOL *' <LValueToRValue>
          | | `-DeclRefExpr 0x7feb92891f20 <col:9> 'BOOL *':'BOOL *' lvalue ParmVar 0x7feb92891a10 'y' 'BOOL *':'BOOL *'
          | `-ImplicitCastExpr 0x7feb92891f78 <col:11> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7feb92891f40 <col:11> 'int' lvalue Var 0x7feb92891c50 'i' 'int'
          `-ImplicitCastExpr 0x7feb92892190 <col:16, col:28> 'BOOL':'unsigned char' <IntegralCast>
            `-BinaryOperator 0x7feb92892170 <col:16, col:28> 'int' '&'
              |-ImplicitCastExpr 0x7feb92892128 <col:16, col:21> 'int' <IntegralCast>
              | `-ImplicitCastExpr 0x7feb92892110 <col:16, col:21> 'BOOL':'unsigned char' <LValueToRValue>
              |   `-ArraySubscriptExpr 0x7feb92892060 <col:16, col:21> 'BOOL':'unsigned char' lvalue
              |     |-ImplicitCastExpr 0x7feb92892048 <col:16> 'BOOL *':'BOOL *' <LValueToRValue>
              |     | `-DeclRefExpr 0x7feb92891fb0 <col:16> 'BOOL *':'BOOL *' lvalue ParmVar 0x7feb92891a10 'y' 'BOOL *':'BOOL *'
              |     `-BinaryOperator 0x7feb92892028 <col:18, col:20> 'int' '-'
              |       |-ImplicitCastExpr 0x7feb92892010 <col:18> 'int' <LValueToRValue>
              |       | `-DeclRefExpr 0x7feb92891fd0 <col:18> 'int' lvalue Var 0x7feb92891c50 'i' 'int'
              |       `-IntegerLiteral 0x7feb92891ff0 <col:20> 'int' 1
              `-ImplicitCastExpr 0x7feb92892158 <col:25, col:28> 'int' <IntegralCast>
                `-ImplicitCastExpr 0x7feb92892140 <col:25, col:28> 'BOOL':'unsigned char' <LValueToRValue>
                  `-ArraySubscriptExpr 0x7feb928920f0 <col:25, col:28> 'BOOL':'unsigned char' lvalue
                    |-ImplicitCastExpr 0x7feb928920c0 <col:25> 'BOOL *':'BOOL *' <LValueToRValue>
                    | `-DeclRefExpr 0x7feb92892080 <col:25> 'BOOL *':'BOOL *' lvalue ParmVar 0x7feb92891880 'x' 'BOOL *':'BOOL *'
                    `-ImplicitCastExpr 0x7feb928920d8 <col:27> 'int' <LValueToRValue>
                      `-DeclRefExpr 0x7feb928920a0 <col:27> 'int' lvalue Var 0x7feb92891c50 'i' 'int'
