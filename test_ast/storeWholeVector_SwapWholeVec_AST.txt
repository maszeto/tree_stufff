TranslationUnitDecl 0x7fe34b838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fe34b8394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fe34b8391a0 '__int128'
|-TypedefDecl 0x7fe34b839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fe34b8391c0 'unsigned __int128'
|-TypedefDecl 0x7fe34b8397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fe34b8395f0 'struct __NSConstantString_tag'
|   `-Record 0x7fe34b839568 '__NSConstantString_tag'
|-TypedefDecl 0x7fe34b839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fe34b839850 'char *'
|   `-BuiltinType 0x7fe34b838ca0 'char'
|-TypedefDecl 0x7fe34b839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fe34b839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fe34b839970 'struct __va_list_tag'
|     `-Record 0x7fe34b8398e8 '__va_list_tag'
`-FunctionDecl 0x7fe34c02e698 <./tree_src/storeWholeVector_SwapWholeVec.c:1:1, line:11:1> line:1:6 SwapWholeVec 'void (int, int, double *, double *)'
  |-ParmVarDecl 0x7fe34c02e200 <line:2:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fe34c02e280 <col:12, col:16> col:16 m 'int'
  |-ParmVarDecl 0x7fe34c02e400 <col:19, col:29> col:26 used x 'double *':'double *'
  |-ParmVarDecl 0x7fe34c02e550 <col:32, col:42> col:39 used y 'double *':'double *'
  `-CompoundStmt 0x7fe34c02ed80 <col:46, line:11:1>
    |-DeclStmt 0x7fe34c02e820 <line:4:5, col:16>
    | `-VarDecl 0x7fe34c02e7b8 <col:5, col:12> col:12 used temp 'double'
    |-DeclStmt 0x7fe34c02e8b8 <line:5:5, col:10>
    | `-VarDecl 0x7fe34c02e850 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x7fe34c02ed48 <line:6:5, line:10:5>
      |-BinaryOperator 0x7fe34c02e910 <line:6:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7fe34c02e8d0 <col:10> 'int' lvalue Var 0x7fe34c02e850 'i' 'int'
      | `-IntegerLiteral 0x7fe34c02e8f0 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7fe34c02e9a0 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7fe34c02e970 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fe34c02e930 <col:16> 'int' lvalue Var 0x7fe34c02e850 'i' 'int'
      | `-ImplicitCastExpr 0x7fe34c02e988 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7fe34c02e950 <col:18> 'int' lvalue ParmVar 0x7fe34c02e200 'n' 'int'
      |-UnaryOperator 0x7fe34c02e9e0 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x7fe34c02e9c0 <col:21> 'int' lvalue Var 0x7fe34c02e850 'i' 'int'
      `-CompoundStmt 0x7fe34c02ed20 <col:28, line:10:5>
        |-BinaryOperator 0x7fe34c02eac0 <line:7:9, col:19> 'double' '='
        | |-DeclRefExpr 0x7fe34c02e9f8 <col:9> 'double' lvalue Var 0x7fe34c02e7b8 'temp' 'double'
        | `-ImplicitCastExpr 0x7fe34c02eaa8 <col:16, col:19> 'double' <LValueToRValue>
        |   `-ArraySubscriptExpr 0x7fe34c02ea88 <col:16, col:19> 'double' lvalue
        |     |-ImplicitCastExpr 0x7fe34c02ea58 <col:16> 'double *':'double *' <LValueToRValue>
        |     | `-DeclRefExpr 0x7fe34c02ea18 <col:16> 'double *':'double *' lvalue ParmVar 0x7fe34c02e400 'x' 'double *':'double *'
        |     `-ImplicitCastExpr 0x7fe34c02ea70 <col:18> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x7fe34c02ea38 <col:18> 'int' lvalue Var 0x7fe34c02e850 'i' 'int'
        |-BinaryOperator 0x7fe34c02ec18 <line:8:9, col:19> 'double' '='
        | |-ArraySubscriptExpr 0x7fe34c02eb50 <col:9, col:12> 'double' lvalue
        | | |-ImplicitCastExpr 0x7fe34c02eb20 <col:9> 'double *':'double *' <LValueToRValue>
        | | | `-DeclRefExpr 0x7fe34c02eae0 <col:9> 'double *':'double *' lvalue ParmVar 0x7fe34c02e400 'x' 'double *':'double *'
        | | `-ImplicitCastExpr 0x7fe34c02eb38 <col:11> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x7fe34c02eb00 <col:11> 'int' lvalue Var 0x7fe34c02e850 'i' 'int'
        | `-ImplicitCastExpr 0x7fe34c02ec00 <col:16, col:19> 'double' <LValueToRValue>
        |   `-ArraySubscriptExpr 0x7fe34c02ebe0 <col:16, col:19> 'double' lvalue
        |     |-ImplicitCastExpr 0x7fe34c02ebb0 <col:16> 'double *':'double *' <LValueToRValue>
        |     | `-DeclRefExpr 0x7fe34c02eb70 <col:16> 'double *':'double *' lvalue ParmVar 0x7fe34c02e550 'y' 'double *':'double *'
        |     `-ImplicitCastExpr 0x7fe34c02ebc8 <col:18> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x7fe34c02eb90 <col:18> 'int' lvalue Var 0x7fe34c02e850 'i' 'int'
        `-BinaryOperator 0x7fe34c02ed00 <line:9:9, col:16> 'double' '='
          |-ArraySubscriptExpr 0x7fe34c02eca8 <col:9, col:12> 'double' lvalue
          | |-ImplicitCastExpr 0x7fe34c02ec78 <col:9> 'double *':'double *' <LValueToRValue>
          | | `-DeclRefExpr 0x7fe34c02ec38 <col:9> 'double *':'double *' lvalue ParmVar 0x7fe34c02e550 'y' 'double *':'double *'
          | `-ImplicitCastExpr 0x7fe34c02ec90 <col:11> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7fe34c02ec58 <col:11> 'int' lvalue Var 0x7fe34c02e850 'i' 'int'
          `-ImplicitCastExpr 0x7fe34c02ece8 <col:16> 'double' <LValueToRValue>
            `-DeclRefExpr 0x7fe34c02ecc8 <col:16> 'double' lvalue Var 0x7fe34c02e7b8 'temp' 'double'
