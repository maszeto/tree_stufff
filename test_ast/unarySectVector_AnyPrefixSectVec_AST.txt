TranslationUnitDecl 0x7fb8be821e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fb8be8226a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fb8be8223a0 '__int128'
|-TypedefDecl 0x7fb8be822710 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fb8be8223c0 'unsigned __int128'
|-TypedefDecl 0x7fb8be8229f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fb8be8227f0 'struct __NSConstantString_tag'
|   `-Record 0x7fb8be822768 '__NSConstantString_tag'
|-TypedefDecl 0x7fb8be822a90 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fb8be822a50 'char *'
|   `-BuiltinType 0x7fb8be821ea0 'char'
|-TypedefDecl 0x7fb8be822d68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fb8be822d10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fb8be822b70 'struct __va_list_tag'
|     `-Record 0x7fb8be822ae8 '__va_list_tag'
|-TypedefDecl 0x7fb8c1008800 <./tree_src/unarySectVector_AnyPrefixSectVec.c:4:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7fb8be821f60 'unsigned char'
`-FunctionDecl 0x7fb8c10090c8 <line:11:1, line:23:1> line:11:6 AnyPrefixSectVec 'void (int, BOOL *, BOOL *, int, int, int, int, int, int)'
  |-ParmVarDecl 0x7fb8c1008870 <line:12:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fb8c1008a80 <col:12, col:20> col:17 used x 'BOOL *':'BOOL *'
  |-ParmVarDecl 0x7fb8c1008c10 <col:23, col:31> col:28 used y 'BOOL *':'BOOL *'
  |-ParmVarDecl 0x7fb8c1008c90 <line:13:5, col:9> col:9 used startx 'int'
  |-ParmVarDecl 0x7fb8c1008d10 <col:17, col:21> col:21 used stopx 'int'
  |-ParmVarDecl 0x7fb8c1008d90 <col:28, col:32> col:32 used stepx 'int'
  |-ParmVarDecl 0x7fb8c1008e10 <line:14:5, col:9> col:9 used starty 'int'
  |-ParmVarDecl 0x7fb8c1008e90 <col:17, col:21> col:21 stopy 'int'
  |-ParmVarDecl 0x7fb8c1008f10 <col:28, col:32> col:32 used stepy 'int'
  `-CompoundStmt 0x7fb8c00288e0 <col:40, line:23:1>
    |-DeclStmt 0x7fb8c1009310 <line:16:5, col:15>
    | |-VarDecl 0x7fb8c1009210 <col:5, col:9> col:9 used ix 'int'
    | `-VarDecl 0x7fb8c1009290 <col:5, col:13> col:13 used iy 'int'
    |-BinaryOperator 0x7fb8c1009460 <line:17:5, col:25> 'BOOL':'unsigned char' '='
    | |-ArraySubscriptExpr 0x7fb8c1009398 <col:5, col:13> 'BOOL':'unsigned char' lvalue
    | | |-ImplicitCastExpr 0x7fb8c1009368 <col:5> 'BOOL *':'BOOL *' <LValueToRValue>
    | | | `-DeclRefExpr 0x7fb8c1009328 <col:5> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fb8c1008c10 'y' 'BOOL *':'BOOL *'
    | | `-ImplicitCastExpr 0x7fb8c1009380 <col:7> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x7fb8c1009348 <col:7> 'int' lvalue ParmVar 0x7fb8c1008e10 'starty' 'int'
    | `-ImplicitCastExpr 0x7fb8c1009448 <col:17, col:25> 'BOOL':'unsigned char' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x7fb8c1009428 <col:17, col:25> 'BOOL':'unsigned char' lvalue
    |     |-ImplicitCastExpr 0x7fb8c10093f8 <col:17> 'BOOL *':'BOOL *' <LValueToRValue>
    |     | `-DeclRefExpr 0x7fb8c10093b8 <col:17> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fb8c1008a80 'x' 'BOOL *':'BOOL *'
    |     `-ImplicitCastExpr 0x7fb8c1009410 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x7fb8c10093d8 <col:19> 'int' lvalue ParmVar 0x7fb8c1008c90 'startx' 'int'
    |-BinaryOperator 0x7fb8c1009518 <line:18:5, col:20> 'int' '='
    | |-DeclRefExpr 0x7fb8c1009480 <col:5> 'int' lvalue Var 0x7fb8c1009290 'iy' 'int'
    | `-BinaryOperator 0x7fb8c10094f8 <col:13, col:20> 'int' '+'
    |   |-ImplicitCastExpr 0x7fb8c10094e0 <col:13> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x7fb8c10094a0 <col:13> 'int' lvalue ParmVar 0x7fb8c1008e10 'starty' 'int'
    |   `-IntegerLiteral 0x7fb8c10094c0 <col:20> 'int' 1
    `-ForStmt 0x7fb8c00288a8 <line:19:5, line:22:5>
      |-BinaryOperator 0x7fb8c10095d0 <line:19:10, col:21> 'int' '='
      | |-DeclRefExpr 0x7fb8c1009538 <col:10> 'int' lvalue Var 0x7fb8c1009210 'ix' 'int'
      | `-BinaryOperator 0x7fb8c10095b0 <col:14, col:21> 'int' '+'
      |   |-ImplicitCastExpr 0x7fb8c1009598 <col:14> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x7fb8c1009558 <col:14> 'int' lvalue ParmVar 0x7fb8c1008c90 'startx' 'int'
      |   `-IntegerLiteral 0x7fb8c1009578 <col:21> 'int' 1
      |-<<<NULL>>>
      |-BinaryOperator 0x7fb8c1009660 <col:24, col:27> 'int' '<'
      | |-ImplicitCastExpr 0x7fb8c1009630 <col:24> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fb8c10095f0 <col:24> 'int' lvalue Var 0x7fb8c1009210 'ix' 'int'
      | `-ImplicitCastExpr 0x7fb8c1009648 <col:27> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7fb8c1009610 <col:27> 'int' lvalue ParmVar 0x7fb8c1008d10 'stopx' 'int'
      |-CompoundAssignOperator 0x7fb8c10096d8 <col:34, col:39> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
      | |-DeclRefExpr 0x7fb8c1009680 <col:34> 'int' lvalue Var 0x7fb8c1009210 'ix' 'int'
      | `-ImplicitCastExpr 0x7fb8c10096c0 <col:39> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7fb8c10096a0 <col:39> 'int' lvalue ParmVar 0x7fb8c1008d90 'stepx' 'int'
      `-CompoundStmt 0x7fb8c0028888 <col:47, line:22:5>
        |-BinaryOperator 0x7fb8c0028798 <line:20:9, col:31> 'BOOL':'unsigned char' '='
        | |-ArraySubscriptExpr 0x7fb8c1009778 <col:9, col:13> 'BOOL':'unsigned char' lvalue
        | | |-ImplicitCastExpr 0x7fb8c1009748 <col:9> 'BOOL *':'BOOL *' <LValueToRValue>
        | | | `-DeclRefExpr 0x7fb8c1009708 <col:9> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fb8c1008c10 'y' 'BOOL *':'BOOL *'
        | | `-ImplicitCastExpr 0x7fb8c1009760 <col:11> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x7fb8c1009728 <col:11> 'int' lvalue Var 0x7fb8c1009290 'iy' 'int'
        | `-ImplicitCastExpr 0x7fb8c0028780 <col:17, col:31> 'BOOL':'unsigned char' <IntegralCast>
        |   `-BinaryOperator 0x7fb8c0028760 <col:17, col:31> 'int' '|'
        |     |-ImplicitCastExpr 0x7fb8c0028718 <col:17, col:23> 'int' <IntegralCast>
        |     | `-ImplicitCastExpr 0x7fb8c0028700 <col:17, col:23> 'BOOL':'unsigned char' <LValueToRValue>
        |     |   `-ArraySubscriptExpr 0x7fb8c0028650 <col:17, col:23> 'BOOL':'unsigned char' lvalue
        |     |     |-ImplicitCastExpr 0x7fb8c0028638 <col:17> 'BOOL *':'BOOL *' <LValueToRValue>
        |     |     | `-DeclRefExpr 0x7fb8c1009798 <col:17> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fb8c1008c10 'y' 'BOOL *':'BOOL *'
        |     |     `-BinaryOperator 0x7fb8c0028618 <col:19, col:22> 'int' '-'
        |     |       |-ImplicitCastExpr 0x7fb8c0028600 <col:19> 'int' <LValueToRValue>
        |     |       | `-DeclRefExpr 0x7fb8c10097b8 <col:19> 'int' lvalue Var 0x7fb8c1009290 'iy' 'int'
        |     |       `-IntegerLiteral 0x7fb8c10097d8 <col:22> 'int' 1
        |     `-ImplicitCastExpr 0x7fb8c0028748 <col:27, col:31> 'int' <IntegralCast>
        |       `-ImplicitCastExpr 0x7fb8c0028730 <col:27, col:31> 'BOOL':'unsigned char' <LValueToRValue>
        |         `-ArraySubscriptExpr 0x7fb8c00286e0 <col:27, col:31> 'BOOL':'unsigned char' lvalue
        |           |-ImplicitCastExpr 0x7fb8c00286b0 <col:27> 'BOOL *':'BOOL *' <LValueToRValue>
        |           | `-DeclRefExpr 0x7fb8c0028670 <col:27> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fb8c1008a80 'x' 'BOOL *':'BOOL *'
        |           `-ImplicitCastExpr 0x7fb8c00286c8 <col:29> 'int' <LValueToRValue>
        |             `-DeclRefExpr 0x7fb8c0028690 <col:29> 'int' lvalue Var 0x7fb8c1009210 'ix' 'int'
        `-BinaryOperator 0x7fb8c0028868 <line:21:9, col:21> 'int' '='
          |-DeclRefExpr 0x7fb8c00287b8 <col:9> 'int' lvalue Var 0x7fb8c1009290 'iy' 'int'
          `-BinaryOperator 0x7fb8c0028848 <col:16, col:21> 'int' '+'
            |-ImplicitCastExpr 0x7fb8c0028818 <col:16> 'int' <LValueToRValue>
            | `-DeclRefExpr 0x7fb8c00287d8 <col:16> 'int' lvalue Var 0x7fb8c1009290 'iy' 'int'
            `-ImplicitCastExpr 0x7fb8c0028830 <col:21> 'int' <LValueToRValue>
              `-DeclRefExpr 0x7fb8c00287f8 <col:21> 'int' lvalue ParmVar 0x7fb8c1008f10 'stepy' 'int'
