TranslationUnitDecl 0x7fea4b838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fea4b8394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fea4b8391a0 '__int128'
|-TypedefDecl 0x7fea4b839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fea4b8391c0 'unsigned __int128'
|-TypedefDecl 0x7fea4b8397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fea4b8395f0 'struct __NSConstantString_tag'
|   `-Record 0x7fea4b839568 '__NSConstantString_tag'
|-TypedefDecl 0x7fea4b839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fea4b839850 'char *'
|   `-BuiltinType 0x7fea4b838ca0 'char'
|-TypedefDecl 0x7fea4b839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fea4b839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fea4b839970 'struct __va_list_tag'
|     `-Record 0x7fea4b8398e8 '__va_list_tag'
|-TypedefDecl 0x7fea4c02f200 <./tree_src/dyadicWholeVector_SubWholeVec.c:3:1, col:23> col:23 BOOL 'unsigned char'
| `-BuiltinType 0x7fea4b838d60 'unsigned char'
`-FunctionDecl 0x7fea4c02f7d8 <line:6:1, line:13:1> line:6:6 SubWholeVec 'void (int, double *, double *, double *)'
  |-ParmVarDecl 0x7fea4c02f270 <line:7:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fea4c02f3f0 <col:12, col:22> col:19 used x 'double *':'double *'
  |-ParmVarDecl 0x7fea4c02f540 <col:25, col:35> col:32 used y 'double *':'double *'
  |-ParmVarDecl 0x7fea4c02f690 <col:38, col:48> col:45 used z 'double *':'double *'
  `-CompoundStmt 0x7fea4c02fd10 <col:52, line:13:1>
    |-DeclStmt 0x7fea4c02f960 <line:9:5, col:10>
    | `-VarDecl 0x7fea4c02f8f8 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x7fea4c02fcd8 <line:10:5, line:12:5>
      |-BinaryOperator 0x7fea4c02f9b8 <line:10:10, col:12> 'int' '='
      | |-DeclRefExpr 0x7fea4c02f978 <col:10> 'int' lvalue Var 0x7fea4c02f8f8 'i' 'int'
      | `-IntegerLiteral 0x7fea4c02f998 <col:12> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7fea4c02fa48 <col:15, col:17> 'int' '<'
      | |-ImplicitCastExpr 0x7fea4c02fa18 <col:15> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fea4c02f9d8 <col:15> 'int' lvalue Var 0x7fea4c02f8f8 'i' 'int'
      | `-ImplicitCastExpr 0x7fea4c02fa30 <col:17> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7fea4c02f9f8 <col:17> 'int' lvalue ParmVar 0x7fea4c02f270 'n' 'int'
      |-UnaryOperator 0x7fea4c02fa88 <col:20, col:21> 'int' postfix '++'
      | `-DeclRefExpr 0x7fea4c02fa68 <col:20> 'int' lvalue Var 0x7fea4c02f8f8 'i' 'int'
      `-CompoundStmt 0x7fea4c02fcc0 <col:26, line:12:5>
        `-BinaryOperator 0x7fea4c02fca0 <line:11:9, col:26> 'double' '='
          |-ArraySubscriptExpr 0x7fea4c02fb10 <col:9, col:12> 'double' lvalue
          | |-ImplicitCastExpr 0x7fea4c02fae0 <col:9> 'double *':'double *' <LValueToRValue>
          | | `-DeclRefExpr 0x7fea4c02faa0 <col:9> 'double *':'double *' lvalue ParmVar 0x7fea4c02f690 'z' 'double *':'double *'
          | `-ImplicitCastExpr 0x7fea4c02faf8 <col:11> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7fea4c02fac0 <col:11> 'int' lvalue Var 0x7fea4c02f8f8 'i' 'int'
          `-BinaryOperator 0x7fea4c02fc80 <col:16, col:26> 'double' '-'
            |-ImplicitCastExpr 0x7fea4c02fc50 <col:16, col:19> 'double' <LValueToRValue>
            | `-ArraySubscriptExpr 0x7fea4c02fba0 <col:16, col:19> 'double' lvalue
            |   |-ImplicitCastExpr 0x7fea4c02fb70 <col:16> 'double *':'double *' <LValueToRValue>
            |   | `-DeclRefExpr 0x7fea4c02fb30 <col:16> 'double *':'double *' lvalue ParmVar 0x7fea4c02f3f0 'x' 'double *':'double *'
            |   `-ImplicitCastExpr 0x7fea4c02fb88 <col:18> 'int' <LValueToRValue>
            |     `-DeclRefExpr 0x7fea4c02fb50 <col:18> 'int' lvalue Var 0x7fea4c02f8f8 'i' 'int'
            `-ImplicitCastExpr 0x7fea4c02fc68 <col:23, col:26> 'double' <LValueToRValue>
              `-ArraySubscriptExpr 0x7fea4c02fc30 <col:23, col:26> 'double' lvalue
                |-ImplicitCastExpr 0x7fea4c02fc00 <col:23> 'double *':'double *' <LValueToRValue>
                | `-DeclRefExpr 0x7fea4c02fbc0 <col:23> 'double *':'double *' lvalue ParmVar 0x7fea4c02f540 'y' 'double *':'double *'
                `-ImplicitCastExpr 0x7fea4c02fc18 <col:25> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x7fea4c02fbe0 <col:25> 'int' lvalue Var 0x7fea4c02f8f8 'i' 'int'
