TranslationUnitDecl 0x7fd095838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fd0958394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fd0958391a0 '__int128'
|-TypedefDecl 0x7fd095839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fd0958391c0 'unsigned __int128'
|-TypedefDecl 0x7fd0958397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fd0958395f0 'struct __NSConstantString_tag'
|   `-Record 0x7fd095839568 '__NSConstantString_tag'
|-TypedefDecl 0x7fd095839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fd095839850 'char *'
|   `-BuiltinType 0x7fd095838ca0 'char'
|-TypedefDecl 0x7fd095839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fd095839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fd095839970 'struct __va_list_tag'
|     `-Record 0x7fd0958398e8 '__va_list_tag'
|-TypedefDecl 0x7fd09602f200 <./tree_src/unaryWholeVector_SumSuffixWholeVec.c:4:1, col:23> col:23 BOOL 'unsigned char'
| `-BuiltinType 0x7fd095838d60 'unsigned char'
`-FunctionDecl 0x7fd09602f668 <line:10:1, line:18:1> line:10:6 SumSuffixWholeVec 'void (int, double *, double *)'
  |-ParmVarDecl 0x7fd09602f270 <line:11:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fd09602f3f0 <col:12, col:22> col:19 used x 'double *':'double *'
  |-ParmVarDecl 0x7fd09602f540 <col:25, col:35> col:32 used y 'double *':'double *'
  `-CompoundStmt 0x7fd09602fe40 <col:39, line:18:1>
    |-DeclStmt 0x7fd09602f7e8 <line:13:5, col:10>
    | `-VarDecl 0x7fd09602f780 <col:5, col:9> col:9 used i 'int'
    |-BinaryOperator 0x7fd09602f9b8 <line:14:5, col:19> 'double' '='
    | |-ArraySubscriptExpr 0x7fd09602f8b0 <col:5, col:10> 'double' lvalue
    | | |-ImplicitCastExpr 0x7fd09602f898 <col:5> 'double *':'double *' <LValueToRValue>
    | | | `-DeclRefExpr 0x7fd09602f800 <col:5> 'double *':'double *' lvalue ParmVar 0x7fd09602f540 'y' 'double *':'double *'
    | | `-BinaryOperator 0x7fd09602f878 <col:7, col:9> 'int' '-'
    | |   |-ImplicitCastExpr 0x7fd09602f860 <col:7> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x7fd09602f820 <col:7> 'int' lvalue ParmVar 0x7fd09602f270 'n' 'int'
    | |   `-IntegerLiteral 0x7fd09602f840 <col:9> 'int' 1
    | `-ImplicitCastExpr 0x7fd09602f9a0 <col:14, col:19> 'double' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x7fd09602f980 <col:14, col:19> 'double' lvalue
    |     |-ImplicitCastExpr 0x7fd09602f968 <col:14> 'double *':'double *' <LValueToRValue>
    |     | `-DeclRefExpr 0x7fd09602f8d0 <col:14> 'double *':'double *' lvalue ParmVar 0x7fd09602f3f0 'x' 'double *':'double *'
    |     `-BinaryOperator 0x7fd09602f948 <col:16, col:18> 'int' '-'
    |       |-ImplicitCastExpr 0x7fd09602f930 <col:16> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x7fd09602f8f0 <col:16> 'int' lvalue ParmVar 0x7fd09602f270 'n' 'int'
    |       `-IntegerLiteral 0x7fd09602f910 <col:18> 'int' 1
    `-ForStmt 0x7fd09602fe08 <line:15:5, line:17:5>
      |-BinaryOperator 0x7fd09602fa70 <line:15:10, col:16> 'int' '='
      | |-DeclRefExpr 0x7fd09602f9d8 <col:10> 'int' lvalue Var 0x7fd09602f780 'i' 'int'
      | `-BinaryOperator 0x7fd09602fa50 <col:14, col:16> 'int' '-'
      |   |-ImplicitCastExpr 0x7fd09602fa38 <col:14> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x7fd09602f9f8 <col:14> 'int' lvalue ParmVar 0x7fd09602f270 'n' 'int'
      |   `-IntegerLiteral 0x7fd09602fa18 <col:16> 'int' 2
      |-<<<NULL>>>
      |-BinaryOperator 0x7fd09602fae8 <col:19, col:21> 'int' '>'
      | |-ImplicitCastExpr 0x7fd09602fad0 <col:19> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fd09602fa90 <col:19> 'int' lvalue Var 0x7fd09602f780 'i' 'int'
      | `-IntegerLiteral 0x7fd09602fab0 <col:21> 'int' 0
      |-CompoundAssignOperator 0x7fd09602fb60 <col:24, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
      | |-DeclRefExpr 0x7fd09602fb08 <col:24> 'int' lvalue Var 0x7fd09602f780 'i' 'int'
      | `-UnaryOperator 0x7fd09602fb48 <col:28, col:29> 'int' prefix '-'
      |   `-IntegerLiteral 0x7fd09602fb28 <col:29> 'int' 1
      `-CompoundStmt 0x7fd09602fdf0 <col:33, line:17:5>
        `-BinaryOperator 0x7fd09602fdd0 <line:16:9, col:28> 'double' '='
          |-ArraySubscriptExpr 0x7fd09602fc00 <col:9, col:12> 'double' lvalue
          | |-ImplicitCastExpr 0x7fd09602fbd0 <col:9> 'double *':'double *' <LValueToRValue>
          | | `-DeclRefExpr 0x7fd09602fb90 <col:9> 'double *':'double *' lvalue ParmVar 0x7fd09602f540 'y' 'double *':'double *'
          | `-ImplicitCastExpr 0x7fd09602fbe8 <col:11> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7fd09602fbb0 <col:11> 'int' lvalue Var 0x7fd09602f780 'i' 'int'
          `-BinaryOperator 0x7fd09602fdb0 <col:16, col:28> 'double' '+'
            |-ImplicitCastExpr 0x7fd09602fd80 <col:16, col:21> 'double' <LValueToRValue>
            | `-ArraySubscriptExpr 0x7fd09602fcd0 <col:16, col:21> 'double' lvalue
            |   |-ImplicitCastExpr 0x7fd09602fcb8 <col:16> 'double *':'double *' <LValueToRValue>
            |   | `-DeclRefExpr 0x7fd09602fc20 <col:16> 'double *':'double *' lvalue ParmVar 0x7fd09602f540 'y' 'double *':'double *'
            |   `-BinaryOperator 0x7fd09602fc98 <col:18, col:20> 'int' '+'
            |     |-ImplicitCastExpr 0x7fd09602fc80 <col:18> 'int' <LValueToRValue>
            |     | `-DeclRefExpr 0x7fd09602fc40 <col:18> 'int' lvalue Var 0x7fd09602f780 'i' 'int'
            |     `-IntegerLiteral 0x7fd09602fc60 <col:20> 'int' 1
            `-ImplicitCastExpr 0x7fd09602fd98 <col:25, col:28> 'double' <LValueToRValue>
              `-ArraySubscriptExpr 0x7fd09602fd60 <col:25, col:28> 'double' lvalue
                |-ImplicitCastExpr 0x7fd09602fd30 <col:25> 'double *':'double *' <LValueToRValue>
                | `-DeclRefExpr 0x7fd09602fcf0 <col:25> 'double *':'double *' lvalue ParmVar 0x7fd09602f3f0 'x' 'double *':'double *'
                `-ImplicitCastExpr 0x7fd09602fd48 <col:27> 'int' <LValueToRValue>
                  `-DeclRefExpr 0x7fd09602fd10 <col:27> 'int' lvalue Var 0x7fd09602f780 'i' 'int'
