TranslationUnitDecl 0x7ff9d5038c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7ff9d50394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7ff9d50391a0 '__int128'
|-TypedefDecl 0x7ff9d5039510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7ff9d50391c0 'unsigned __int128'
|-TypedefDecl 0x7ff9d50397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7ff9d50395f0 'struct __NSConstantString_tag'
|   `-Record 0x7ff9d5039568 '__NSConstantString_tag'
|-TypedefDecl 0x7ff9d5039890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7ff9d5039850 'char *'
|   `-BuiltinType 0x7ff9d5038ca0 'char'
|-TypedefDecl 0x7ff9d5039b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7ff9d5039b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7ff9d5039970 'struct __va_list_tag'
|     `-Record 0x7ff9d50398e8 '__va_list_tag'
|-TypedefDecl 0x7ff9d5091600 <./tree_src/unaryWholeVector_AllWholeVec.c:4:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7ff9d5038d60 'unsigned char'
`-FunctionDecl 0x7ff9d5091a18 <line:10:1, line:19:1> line:10:6 AllWholeVec 'void (int, BOOL *, BOOL *)'
  |-ParmVarDecl 0x7ff9d5091670 <line:11:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7ff9d5091880 <col:12, col:20> col:17 used x 'BOOL *':'BOOL *'
  |-ParmVarDecl 0x7ff9d50918f8 <col:23, col:29> col:29 used z 'BOOL *'
  `-CompoundStmt 0x7ff9d5092020 <col:33, line:19:1>
    |-DeclStmt 0x7ff9d5091b98 <line:13:5, col:10>
    | `-VarDecl 0x7ff9d5091b30 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x7ff9d5091c60 <line:14:5, col:20>
    | `-VarDecl 0x7ff9d5091bc0 <col:5, line:5:14> line:14:10 used val 'BOOL':'unsigned char' cinit
    |   `-ImplicitCastExpr 0x7ff9d5091c48 <line:5:14> 'BOOL':'unsigned char' <IntegralCast>
    |     `-IntegerLiteral 0x7ff9d5091c28 <col:14> 'int' 1
    |-ForStmt 0x7ff9d5091f40 <line:15:5, line:17:5>
    | |-BinaryOperator 0x7ff9d5091cb8 <line:15:10, col:13> 'int' '='
    | | |-DeclRefExpr 0x7ff9d5091c78 <col:10> 'int' lvalue Var 0x7ff9d5091b30 'i' 'int'
    | | `-IntegerLiteral 0x7ff9d5091c98 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x7ff9d5091d48 <col:16, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x7ff9d5091d18 <col:16> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x7ff9d5091cd8 <col:16> 'int' lvalue Var 0x7ff9d5091b30 'i' 'int'
    | | `-ImplicitCastExpr 0x7ff9d5091d30 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x7ff9d5091cf8 <col:18> 'int' lvalue ParmVar 0x7ff9d5091670 'n' 'int'
    | |-UnaryOperator 0x7ff9d5091d88 <col:21, col:22> 'int' postfix '++'
    | | `-DeclRefExpr 0x7ff9d5091d68 <col:21> 'int' lvalue Var 0x7ff9d5091b30 'i' 'int'
    | `-CompoundStmt 0x7ff9d5091f28 <col:27, line:17:5>
    |   `-BinaryOperator 0x7ff9d5091f08 <line:16:9, col:24> 'BOOL':'unsigned char' '='
    |     |-DeclRefExpr 0x7ff9d5091da0 <col:9> 'BOOL':'unsigned char' lvalue Var 0x7ff9d5091bc0 'val' 'BOOL':'unsigned char'
    |     `-ImplicitCastExpr 0x7ff9d5091ef0 <col:15, col:24> 'BOOL':'unsigned char' <IntegralCast>
    |       `-BinaryOperator 0x7ff9d5091ed0 <col:15, col:24> 'int' '&'
    |         |-ImplicitCastExpr 0x7ff9d5091e88 <col:15> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x7ff9d5091e70 <col:15> 'BOOL':'unsigned char' <LValueToRValue>
    |         |   `-DeclRefExpr 0x7ff9d5091dc0 <col:15> 'BOOL':'unsigned char' lvalue Var 0x7ff9d5091bc0 'val' 'BOOL':'unsigned char'
    |         `-ImplicitCastExpr 0x7ff9d5091eb8 <col:21, col:24> 'int' <IntegralCast>
    |           `-ImplicitCastExpr 0x7ff9d5091ea0 <col:21, col:24> 'BOOL':'unsigned char' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x7ff9d5091e50 <col:21, col:24> 'BOOL':'unsigned char' lvalue
    |               |-ImplicitCastExpr 0x7ff9d5091e20 <col:21> 'BOOL *':'BOOL *' <LValueToRValue>
    |               | `-DeclRefExpr 0x7ff9d5091de0 <col:21> 'BOOL *':'BOOL *' lvalue ParmVar 0x7ff9d5091880 'x' 'BOOL *':'BOOL *'
    |               `-ImplicitCastExpr 0x7ff9d5091e38 <col:23> 'int' <LValueToRValue>
    |                 `-DeclRefExpr 0x7ff9d5091e00 <col:23> 'int' lvalue Var 0x7ff9d5091b30 'i' 'int'
    `-BinaryOperator 0x7ff9d5092000 <line:18:5, col:10> 'BOOL':'unsigned char' '='
      |-UnaryOperator 0x7ff9d5091fb0 <col:5, col:6> 'BOOL':'unsigned char' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x7ff9d5091f98 <col:6> 'BOOL *' <LValueToRValue>
      |   `-DeclRefExpr 0x7ff9d5091f78 <col:6> 'BOOL *' lvalue ParmVar 0x7ff9d50918f8 'z' 'BOOL *'
      `-ImplicitCastExpr 0x7ff9d5091fe8 <col:10> 'BOOL':'unsigned char' <LValueToRValue>
        `-DeclRefExpr 0x7ff9d5091fc8 <col:10> 'BOOL':'unsigned char' lvalue Var 0x7ff9d5091bc0 'val' 'BOOL':'unsigned char'
