TranslationUnitDecl 0x7fbc81838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fbc818394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fbc818391a0 '__int128'
|-TypedefDecl 0x7fbc81839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fbc818391c0 'unsigned __int128'
|-TypedefDecl 0x7fbc818397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fbc818395f0 'struct __NSConstantString_tag'
|   `-Record 0x7fbc81839568 '__NSConstantString_tag'
|-TypedefDecl 0x7fbc81839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fbc81839850 'char *'
|   `-BuiltinType 0x7fbc81838ca0 'char'
|-TypedefDecl 0x7fbc81839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fbc81839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fbc81839970 'struct __va_list_tag'
|     `-Record 0x7fbc818398e8 '__va_list_tag'
|-TypedefDecl 0x7fbc81891600 <./tree_src/unaryWholeMatrix_AllSuffixWholeLastMat.c:4:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7fbc81838d60 'unsigned char'
`-FunctionDecl 0x7fbc81891e98 <line:11:1, line:21:1> line:11:6 AllSuffixWholeLastMat 'void (int, int, BOOL (*)[m], BOOL (*)[m])'
  |-ParmVarDecl 0x7fbc81891670 <line:12:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fbc818916f0 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7fbc818919c0 <col:19, col:30> col:24 used x 'BOOL (*)[m]':'BOOL (*)[m]'
  |-ParmVarDecl 0x7fbc81891c70 <col:33, col:44> col:38 used y 'BOOL (*)[m]':'BOOL (*)[m]'
  `-CompoundStmt 0x7fbc81894ae8 <col:48, line:21:1>
    |-DeclStmt 0x7fbc818920b8 <line:14:5, col:13>
    | |-VarDecl 0x7fbc81891fb8 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x7fbc81892038 <col:5, col:12> col:12 used j 'int'
    `-ForStmt 0x7fbc81894ab0 <line:15:5, line:20:5>
      |-BinaryOperator 0x7fbc81892110 <line:15:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7fbc818920d0 <col:10> 'int' lvalue Var 0x7fbc81891fb8 'i' 'int'
      | `-IntegerLiteral 0x7fbc818920f0 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7fbc818921a0 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7fbc81892170 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fbc81892130 <col:16> 'int' lvalue Var 0x7fbc81891fb8 'i' 'int'
      | `-ImplicitCastExpr 0x7fbc81892188 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7fbc81892150 <col:18> 'int' lvalue ParmVar 0x7fbc81891670 'n' 'int'
      |-UnaryOperator 0x7fbc818921e0 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x7fbc818921c0 <col:21> 'int' lvalue Var 0x7fbc81891fb8 'i' 'int'
      `-CompoundStmt 0x7fbc81894a90 <col:27, line:20:5>
        |-BinaryOperator 0x7fbc81892470 <line:16:9, col:25> 'BOOL':'unsigned char' '='
        | |-ArraySubscriptExpr 0x7fbc81892338 <col:9, col:15> 'BOOL':'unsigned char' lvalue
        | | |-ImplicitCastExpr 0x7fbc81892308 <col:9, col:12> 'BOOL *' <ArrayToPointerDecay>
        | | | `-ArraySubscriptExpr 0x7fbc81892268 <col:9, col:12> 'BOOL [m]' lvalue
        | | |   |-ImplicitCastExpr 0x7fbc81892238 <col:9> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
        | | |   | `-DeclRefExpr 0x7fbc818921f8 <col:9> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fbc81891c70 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
        | | |   `-ImplicitCastExpr 0x7fbc81892250 <col:11> 'int' <LValueToRValue>
        | | |     `-DeclRefExpr 0x7fbc81892218 <col:11> 'int' lvalue Var 0x7fbc81891fb8 'i' 'int'
        | | `-ImplicitCastExpr 0x7fbc81892320 <col:14> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x7fbc81892288 <col:14> 'int' lvalue ParmVar 0x7fbc818916f0 'm' 'int'
        | `-ImplicitCastExpr 0x7fbc81892458 <col:19, col:25> 'BOOL':'unsigned char' <LValueToRValue>
        |   `-ArraySubscriptExpr 0x7fbc81892438 <col:19, col:25> 'BOOL':'unsigned char' lvalue
        |     |-ImplicitCastExpr 0x7fbc81892408 <col:19, col:22> 'BOOL *' <ArrayToPointerDecay>
        |     | `-ArraySubscriptExpr 0x7fbc818923c8 <col:19, col:22> 'BOOL [m]' lvalue
        |     |   |-ImplicitCastExpr 0x7fbc81892398 <col:19> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x7fbc81892358 <col:19> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fbc818919c0 'x' 'BOOL (*)[m]':'BOOL (*)[m]'
        |     |   `-ImplicitCastExpr 0x7fbc818923b0 <col:21> 'int' <LValueToRValue>
        |     |     `-DeclRefExpr 0x7fbc81892378 <col:21> 'int' lvalue Var 0x7fbc81891fb8 'i' 'int'
        |     `-ImplicitCastExpr 0x7fbc81892420 <col:24> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x7fbc818923e8 <col:24> 'int' lvalue ParmVar 0x7fbc818916f0 'm' 'int'
        `-ForStmt 0x7fbc81894a58 <line:17:9, line:19:9>
          |-BinaryOperator 0x7fbc81892528 <line:17:14, col:20> 'int' '='
          | |-DeclRefExpr 0x7fbc81892490 <col:14> 'int' lvalue Var 0x7fbc81892038 'j' 'int'
          | `-BinaryOperator 0x7fbc81892508 <col:18, col:20> 'int' '-'
          |   |-ImplicitCastExpr 0x7fbc818924f0 <col:18> 'int' <LValueToRValue>
          |   | `-DeclRefExpr 0x7fbc818924b0 <col:18> 'int' lvalue ParmVar 0x7fbc818916f0 'm' 'int'
          |   `-IntegerLiteral 0x7fbc818924d0 <col:20> 'int' 1
          |-<<<NULL>>>
          |-BinaryOperator 0x7fbc818925a0 <col:23, col:25> 'int' '>'
          | |-ImplicitCastExpr 0x7fbc81892588 <col:23> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x7fbc81892548 <col:23> 'int' lvalue Var 0x7fbc81892038 'j' 'int'
          | `-IntegerLiteral 0x7fbc81892568 <col:25> 'int' 0
          |-CompoundAssignOperator 0x7fbc81894618 <col:28, col:33> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
          | |-DeclRefExpr 0x7fbc818925c0 <col:28> 'int' lvalue Var 0x7fbc81892038 'j' 'int'
          | `-UnaryOperator 0x7fbc81894600 <col:32, col:33> 'int' prefix '-'
          |   `-IntegerLiteral 0x7fbc818925e0 <col:33> 'int' 1
          `-CompoundStmt 0x7fbc81894a40 <col:37, line:19:9>
            `-BinaryOperator 0x7fbc81894a20 <line:18:6, col:34> 'BOOL':'unsigned char' '='
              |-ArraySubscriptExpr 0x7fbc81894728 <col:6, col:12> 'BOOL':'unsigned char' lvalue
              | |-ImplicitCastExpr 0x7fbc818946f8 <col:6, col:9> 'BOOL *' <ArrayToPointerDecay>
              | | `-ArraySubscriptExpr 0x7fbc818946b8 <col:6, col:9> 'BOOL [m]' lvalue
              | |   |-ImplicitCastExpr 0x7fbc81894688 <col:6> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
              | |   | `-DeclRefExpr 0x7fbc81894648 <col:6> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fbc81891c70 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
              | |   `-ImplicitCastExpr 0x7fbc818946a0 <col:8> 'int' <LValueToRValue>
              | |     `-DeclRefExpr 0x7fbc81894668 <col:8> 'int' lvalue Var 0x7fbc81891fb8 'i' 'int'
              | `-ImplicitCastExpr 0x7fbc81894710 <col:11> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x7fbc818946d8 <col:11> 'int' lvalue Var 0x7fbc81892038 'j' 'int'
              `-ImplicitCastExpr 0x7fbc81894a08 <col:16, col:34> 'BOOL':'unsigned char' <IntegralCast>
                `-BinaryOperator 0x7fbc818949e8 <col:16, col:34> 'int' '&'
                  |-ImplicitCastExpr 0x7fbc818949a0 <col:16, col:24> 'int' <IntegralCast>
                  | `-ImplicitCastExpr 0x7fbc81894988 <col:16, col:24> 'BOOL':'unsigned char' <LValueToRValue>
                  |   `-ArraySubscriptExpr 0x7fbc81894868 <col:16, col:24> 'BOOL':'unsigned char' lvalue
                  |     |-ImplicitCastExpr 0x7fbc81894850 <col:16, col:19> 'BOOL *' <ArrayToPointerDecay>
                  |     | `-ArraySubscriptExpr 0x7fbc818947b8 <col:16, col:19> 'BOOL [m]' lvalue
                  |     |   |-ImplicitCastExpr 0x7fbc81894788 <col:16> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
                  |     |   | `-DeclRefExpr 0x7fbc81894748 <col:16> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fbc81891c70 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
                  |     |   `-ImplicitCastExpr 0x7fbc818947a0 <col:18> 'int' <LValueToRValue>
                  |     |     `-DeclRefExpr 0x7fbc81894768 <col:18> 'int' lvalue Var 0x7fbc81891fb8 'i' 'int'
                  |     `-BinaryOperator 0x7fbc81894830 <col:21, col:23> 'int' '+'
                  |       |-ImplicitCastExpr 0x7fbc81894818 <col:21> 'int' <LValueToRValue>
                  |       | `-DeclRefExpr 0x7fbc818947d8 <col:21> 'int' lvalue Var 0x7fbc81892038 'j' 'int'
                  |       `-IntegerLiteral 0x7fbc818947f8 <col:23> 'int' 1
                  `-ImplicitCastExpr 0x7fbc818949d0 <col:28, col:34> 'int' <IntegralCast>
                    `-ImplicitCastExpr 0x7fbc818949b8 <col:28, col:34> 'BOOL':'unsigned char' <LValueToRValue>
                      `-ArraySubscriptExpr 0x7fbc81894968 <col:28, col:34> 'BOOL':'unsigned char' lvalue
                        |-ImplicitCastExpr 0x7fbc81894938 <col:28, col:31> 'BOOL *' <ArrayToPointerDecay>
                        | `-ArraySubscriptExpr 0x7fbc818948f8 <col:28, col:31> 'BOOL [m]' lvalue
                        |   |-ImplicitCastExpr 0x7fbc818948c8 <col:28> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
                        |   | `-DeclRefExpr 0x7fbc81894888 <col:28> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fbc818919c0 'x' 'BOOL (*)[m]':'BOOL (*)[m]'
                        |   `-ImplicitCastExpr 0x7fbc818948e0 <col:30> 'int' <LValueToRValue>
                        |     `-DeclRefExpr 0x7fbc818948a8 <col:30> 'int' lvalue Var 0x7fbc81891fb8 'i' 'int'
                        `-ImplicitCastExpr 0x7fbc81894950 <col:33> 'int' <LValueToRValue>
                          `-DeclRefExpr 0x7fbc81894918 <col:33> 'int' lvalue Var 0x7fbc81892038 'j' 'int'
