TranslationUnitDecl 0x7ff1f4038c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7ff1f40394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7ff1f40391a0 '__int128'
|-TypedefDecl 0x7ff1f4039510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7ff1f40391c0 'unsigned __int128'
|-TypedefDecl 0x7ff1f40397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7ff1f40395f0 'struct __NSConstantString_tag'
|   `-Record 0x7ff1f4039568 '__NSConstantString_tag'
|-TypedefDecl 0x7ff1f4039890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7ff1f4039850 'char *'
|   `-BuiltinType 0x7ff1f4038ca0 'char'
|-TypedefDecl 0x7ff1f4039b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7ff1f4039b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7ff1f4039970 'struct __va_list_tag'
|     `-Record 0x7ff1f40398e8 '__va_list_tag'
`-FunctionDecl 0x7ff1f5013248 <./tree_src/storeWholeMatrix_SetWholeVecMatCol.c:1:1, line:8:1> line:1:6 SetWholeVecMatCol 'void (int, int, double (*)[m], double *, int)'
  |-ParmVarDecl 0x7ff1f5012c00 <line:2:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7ff1f5012c80 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7ff1f5012e80 <col:19, col:32> col:26 used x 'double (*)[m]':'double (*)[m]'
  |-ParmVarDecl 0x7ff1f5013000 <col:35, col:45> col:42 used z 'double *':'double *'
  |-ParmVarDecl 0x7ff1f5013080 <col:48, col:52> col:52 used p 'int'
  `-CompoundStmt 0x7ff1f5013740 <col:56, line:8:1>
    |-DeclStmt 0x7ff1f50133d8 <line:4:5, col:10>
    | `-VarDecl 0x7ff1f5013370 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x7ff1f5013708 <line:5:5, line:7:5>
      |-BinaryOperator 0x7ff1f5013430 <line:5:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7ff1f50133f0 <col:10> 'int' lvalue Var 0x7ff1f5013370 'i' 'int'
      | `-IntegerLiteral 0x7ff1f5013410 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7ff1f50134c0 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7ff1f5013490 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7ff1f5013450 <col:16> 'int' lvalue Var 0x7ff1f5013370 'i' 'int'
      | `-ImplicitCastExpr 0x7ff1f50134a8 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7ff1f5013470 <col:18> 'int' lvalue ParmVar 0x7ff1f5012c00 'n' 'int'
      |-UnaryOperator 0x7ff1f5013500 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x7ff1f50134e0 <col:21> 'int' lvalue Var 0x7ff1f5013370 'i' 'int'
      `-CompoundStmt 0x7ff1f50136e8 <col:26, line:7:5>
        |-NullStmt 0x7ff1f5013518 <line:5:27>
        `-BinaryOperator 0x7ff1f50136c8 <line:6:9, col:22> 'double' '='
          |-ArraySubscriptExpr 0x7ff1f5013590 <col:9, col:12> 'double' lvalue
          | |-ImplicitCastExpr 0x7ff1f5013560 <col:9> 'double *':'double *' <LValueToRValue>
          | | `-DeclRefExpr 0x7ff1f5013520 <col:9> 'double *':'double *' lvalue ParmVar 0x7ff1f5013000 'z' 'double *':'double *'
          | `-ImplicitCastExpr 0x7ff1f5013578 <col:11> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7ff1f5013540 <col:11> 'int' lvalue Var 0x7ff1f5013370 'i' 'int'
          `-ImplicitCastExpr 0x7ff1f50136b0 <col:16, col:22> 'double' <LValueToRValue>
            `-ArraySubscriptExpr 0x7ff1f5013690 <col:16, col:22> 'double' lvalue
              |-ImplicitCastExpr 0x7ff1f5013660 <col:16, col:19> 'double *' <ArrayToPointerDecay>
              | `-ArraySubscriptExpr 0x7ff1f5013620 <col:16, col:19> 'double [m]' lvalue
              |   |-ImplicitCastExpr 0x7ff1f50135f0 <col:16> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
              |   | `-DeclRefExpr 0x7ff1f50135b0 <col:16> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7ff1f5012e80 'x' 'double (*)[m]':'double (*)[m]'
              |   `-ImplicitCastExpr 0x7ff1f5013608 <col:18> 'int' <LValueToRValue>
              |     `-DeclRefExpr 0x7ff1f50135d0 <col:18> 'int' lvalue Var 0x7ff1f5013370 'i' 'int'
              `-ImplicitCastExpr 0x7ff1f5013678 <col:21> 'int' <LValueToRValue>
                `-DeclRefExpr 0x7ff1f5013640 <col:21> 'int' lvalue ParmVar 0x7ff1f5013080 'p' 'int'
