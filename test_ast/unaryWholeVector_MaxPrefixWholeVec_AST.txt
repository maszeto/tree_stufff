TranslationUnitDecl 0x7fbe23030408 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fbe23030ca0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fbe230309a0 '__int128'
|-TypedefDecl 0x7fbe23030d10 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fbe230309c0 'unsigned __int128'
|-TypedefDecl 0x7fbe23030ff8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fbe23030df0 'struct __NSConstantString_tag'
|   `-Record 0x7fbe23030d68 '__NSConstantString_tag'
|-TypedefDecl 0x7fbe23031090 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fbe23031050 'char *'
|   `-BuiltinType 0x7fbe230304a0 'char'
|-TypedefDecl 0x7fbe23031368 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fbe23031310 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fbe23031170 'struct __va_list_tag'
|     `-Record 0x7fbe230310e8 '__va_list_tag'
|-TypedefDecl 0x7fbe2202fe00 <./tree_src/unaryWholeVector_MaxPrefixWholeVec.c:4:1, col:23> col:23 BOOL 'unsigned char'
| `-BuiltinType 0x7fbe23030560 'unsigned char'
|-FunctionDecl 0x7fbe22030268 <line:11:1, line:19:1> line:11:6 MaxPrefixWholeVec 'void (int, double *, double *)'
| |-ParmVarDecl 0x7fbe2202fe70 <line:12:5, col:9> col:9 used n 'int'
| |-ParmVarDecl 0x7fbe2202fff0 <col:12, col:22> col:19 used x 'double *':'double *'
| |-ParmVarDecl 0x7fbe22030140 <col:25, col:35> col:32 used y 'double *':'double *'
| `-CompoundStmt 0x7fbe22030b80 <col:39, line:19:1>
|   |-DeclStmt 0x7fbe220303e8 <line:14:5, col:10>
|   | `-VarDecl 0x7fbe22030380 <col:5, col:9> col:9 used i 'int'
|   |-BinaryOperator 0x7fbe22030508 <line:15:5, col:15> 'double' '='
|   | |-ArraySubscriptExpr 0x7fbe22030458 <col:5, col:8> 'double' lvalue
|   | | |-ImplicitCastExpr 0x7fbe22030440 <col:5> 'double *':'double *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x7fbe22030400 <col:5> 'double *':'double *' lvalue ParmVar 0x7fbe22030140 'y' 'double *':'double *'
|   | | `-IntegerLiteral 0x7fbe22030420 <col:7> 'int' 0
|   | `-ImplicitCastExpr 0x7fbe220304f0 <col:12, col:15> 'double' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x7fbe220304d0 <col:12, col:15> 'double' lvalue
|   |     |-ImplicitCastExpr 0x7fbe220304b8 <col:12> 'double *':'double *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x7fbe22030478 <col:12> 'double *':'double *' lvalue ParmVar 0x7fbe2202fff0 'x' 'double *':'double *'
|   |     `-IntegerLiteral 0x7fbe22030498 <col:14> 'int' 0
|   `-ForStmt 0x7fbe22030b48 <line:16:5, line:18:5>
|     |-BinaryOperator 0x7fbe22030568 <line:16:10, col:13> 'int' '='
|     | |-DeclRefExpr 0x7fbe22030528 <col:10> 'int' lvalue Var 0x7fbe22030380 'i' 'int'
|     | `-IntegerLiteral 0x7fbe22030548 <col:13> 'int' 1
|     |-<<<NULL>>>
|     |-BinaryOperator 0x7fbe220305f8 <col:16, col:18> 'int' '<'
|     | |-ImplicitCastExpr 0x7fbe220305c8 <col:16> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x7fbe22030588 <col:16> 'int' lvalue Var 0x7fbe22030380 'i' 'int'
|     | `-ImplicitCastExpr 0x7fbe220305e0 <col:18> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x7fbe220305a8 <col:18> 'int' lvalue ParmVar 0x7fbe2202fe70 'n' 'int'
|     |-UnaryOperator 0x7fbe22030638 <col:21, col:22> 'int' postfix '++'
|     | `-DeclRefExpr 0x7fbe22030618 <col:21> 'int' lvalue Var 0x7fbe22030380 'i' 'int'
|     `-CompoundStmt 0x7fbe22030b30 <col:27, line:18:5>
|       `-BinaryOperator 0x7fbe22030b10 <line:17:9, col:34> 'double' '='
|         |-ArraySubscriptExpr 0x7fbe220306c0 <col:9, col:12> 'double' lvalue
|         | |-ImplicitCastExpr 0x7fbe22030690 <col:9> 'double *':'double *' <LValueToRValue>
|         | | `-DeclRefExpr 0x7fbe22030650 <col:9> 'double *':'double *' lvalue ParmVar 0x7fbe22030140 'y' 'double *':'double *'
|         | `-ImplicitCastExpr 0x7fbe220306a8 <col:11> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x7fbe22030670 <col:11> 'int' lvalue Var 0x7fbe22030380 'i' 'int'
|         `-CallExpr 0x7fbe22030ab0 <col:16, col:34> 'double'
|           |-ImplicitCastExpr 0x7fbe22030a98 <col:16> 'double (*)(double, double)' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x7fbe220308e8 <col:16> 'double (double, double)' Function 0x7fbe22030718 'fmax' 'double (double, double)'
|           |-ImplicitCastExpr 0x7fbe22030ae0 <col:22, col:27> 'double' <LValueToRValue>
|           | `-ArraySubscriptExpr 0x7fbe220309b8 <col:22, col:27> 'double' lvalue
|           |   |-ImplicitCastExpr 0x7fbe220309a0 <col:22> 'double *':'double *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x7fbe22030908 <col:22> 'double *':'double *' lvalue ParmVar 0x7fbe22030140 'y' 'double *':'double *'
|           |   `-BinaryOperator 0x7fbe22030980 <col:24, col:26> 'int' '-'
|           |     |-ImplicitCastExpr 0x7fbe22030968 <col:24> 'int' <LValueToRValue>
|           |     | `-DeclRefExpr 0x7fbe22030928 <col:24> 'int' lvalue Var 0x7fbe22030380 'i' 'int'
|           |     `-IntegerLiteral 0x7fbe22030948 <col:26> 'int' 1
|           `-ImplicitCastExpr 0x7fbe22030af8 <col:30, col:33> 'double' <LValueToRValue>
|             `-ArraySubscriptExpr 0x7fbe22030a48 <col:30, col:33> 'double' lvalue
|               |-ImplicitCastExpr 0x7fbe22030a18 <col:30> 'double *':'double *' <LValueToRValue>
|               | `-DeclRefExpr 0x7fbe220309d8 <col:30> 'double *':'double *' lvalue ParmVar 0x7fbe2202fff0 'x' 'double *':'double *'
|               `-ImplicitCastExpr 0x7fbe22030a30 <col:32> 'int' <LValueToRValue>
|                 `-DeclRefExpr 0x7fbe220309f8 <col:32> 'int' lvalue Var 0x7fbe22030380 'i' 'int'
`-FunctionDecl 0x7fbe22030718 <col:16> col:16 implicit used fmax 'double (double, double)' extern
  |-ParmVarDecl 0x7fbe220307b8 <<invalid sloc>> <invalid sloc> 'double'
  |-ParmVarDecl 0x7fbe22030820 <<invalid sloc>> <invalid sloc> 'double'
  |-NoThrowAttr 0x7fbe22030898 <col:16> Implicit
  `-ConstAttr 0x7fbe220308d8 <col:16> Implicit
