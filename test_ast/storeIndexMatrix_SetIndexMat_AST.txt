TranslationUnitDecl 0x7f9432038c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f94320394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f94320391a0 '__int128'
|-TypedefDecl 0x7f9432039510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f94320391c0 'unsigned __int128'
|-TypedefDecl 0x7f94320397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f94320395f0 'struct __NSConstantString_tag'
|   `-Record 0x7f9432039568 '__NSConstantString_tag'
|-TypedefDecl 0x7f9432039890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f9432039850 'char *'
|   `-BuiltinType 0x7f9432038ca0 'char'
|-TypedefDecl 0x7f9432039b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f9432039b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f9432039970 'struct __va_list_tag'
|     `-Record 0x7f94320398e8 '__va_list_tag'
`-FunctionDecl 0x7f943282eb38 <./tree_src/storeIndexMatrix_SetIndexMat.c:1:1, line:11:1> line:1:6 SetIndexMat 'void (int, int, double (*)[m], double (*)[m], int *, int *, int *, int *)'
  |-ParmVarDecl 0x7f943282e200 <line:2:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7f943282e280 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7f943282e480 <col:19, col:32> col:26 used x 'double (*)[m]':'double (*)[m]'
  |-ParmVarDecl 0x7f943282e680 <col:35, col:48> col:42 used z 'double (*)[m]':'double (*)[m]'
  |-ParmVarDecl 0x7f943282e730 <line:3:5, col:10> col:10 used ix1 'int *'
  |-ParmVarDecl 0x7f943282e7b0 <col:15, col:20> col:20 used ix2 'int *'
  |-ParmVarDecl 0x7f943282e830 <col:25, col:30> col:30 used iz1 'int *'
  |-ParmVarDecl 0x7f943282e8b0 <col:35, col:40> col:40 used iz2 'int *'
  `-CompoundStmt 0x7f94328304b8 <col:46, line:11:1>
    |-DeclStmt 0x7f943282ed78 <line:5:5, col:12>
    | |-VarDecl 0x7f943282ec78 <col:5, col:9> col:9 used j 'int'
    | `-VarDecl 0x7f943282ecf8 <col:5, col:11> col:11 used i 'int'
    `-ForStmt 0x7f9432830480 <line:6:5, line:10:5>
      |-BinaryOperator 0x7f943282edd0 <line:6:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7f943282ed90 <col:10> 'int' lvalue Var 0x7f943282ecf8 'i' 'int'
      | `-IntegerLiteral 0x7f943282edb0 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7f943282ee60 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7f943282ee30 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7f943282edf0 <col:16> 'int' lvalue Var 0x7f943282ecf8 'i' 'int'
      | `-ImplicitCastExpr 0x7f943282ee48 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7f943282ee10 <col:18> 'int' lvalue ParmVar 0x7f943282e200 'n' 'int'
      |-UnaryOperator 0x7f943282eea0 <col:21, col:23> 'int' prefix '++'
      | `-DeclRefExpr 0x7f943282ee80 <col:23> 'int' lvalue Var 0x7f943282ecf8 'i' 'int'
      `-CompoundStmt 0x7f9432830468 <col:27, line:10:5>
        `-ForStmt 0x7f9432830430 <line:7:9, line:9:9>
          |-BinaryOperator 0x7f943282eef8 <line:7:14, col:17> 'int' '='
          | |-DeclRefExpr 0x7f943282eeb8 <col:14> 'int' lvalue Var 0x7f943282ec78 'j' 'int'
          | `-IntegerLiteral 0x7f943282eed8 <col:17> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x7f943282ef88 <col:20, col:22> 'int' '<'
          | |-ImplicitCastExpr 0x7f943282ef58 <col:20> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x7f943282ef18 <col:20> 'int' lvalue Var 0x7f943282ec78 'j' 'int'
          | `-ImplicitCastExpr 0x7f943282ef70 <col:22> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7f943282ef38 <col:22> 'int' lvalue ParmVar 0x7f943282e280 'm' 'int'
          |-UnaryOperator 0x7f943282efc8 <col:25, col:27> 'int' prefix '++'
          | `-DeclRefExpr 0x7f943282efa8 <col:27> 'int' lvalue Var 0x7f943282ec78 'j' 'int'
          `-CompoundStmt 0x7f9432830418 <col:31, line:9:9>
            `-BinaryOperator 0x7f94328303f8 <line:8:13, col:48> 'double' '='
              |-ArraySubscriptExpr 0x7f943282f1c8 <col:13, col:29> 'double' lvalue
              | |-ImplicitCastExpr 0x7f943282f198 <col:13, col:21> 'double *' <ArrayToPointerDecay>
              | | `-ArraySubscriptExpr 0x7f943282f0c0 <col:13, col:21> 'double [m]' lvalue
              | |   |-ImplicitCastExpr 0x7f943282f090 <col:13> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
              | |   | `-DeclRefExpr 0x7f943282efe0 <col:13> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f943282e680 'z' 'double (*)[m]':'double (*)[m]'
              | |   `-ImplicitCastExpr 0x7f943282f0a8 <col:15, col:20> 'int' <LValueToRValue>
              | |     `-ArraySubscriptExpr 0x7f943282f070 <col:15, col:20> 'int' lvalue
              | |       |-ImplicitCastExpr 0x7f943282f040 <col:15> 'int *' <LValueToRValue>
              | |       | `-DeclRefExpr 0x7f943282f000 <col:15> 'int *' lvalue ParmVar 0x7f943282e830 'iz1' 'int *'
              | |       `-ImplicitCastExpr 0x7f943282f058 <col:19> 'int' <LValueToRValue>
              | |         `-DeclRefExpr 0x7f943282f020 <col:19> 'int' lvalue Var 0x7f943282ecf8 'i' 'int'
              | `-ImplicitCastExpr 0x7f943282f1b0 <col:23, col:28> 'int' <LValueToRValue>
              |   `-ArraySubscriptExpr 0x7f943282f150 <col:23, col:28> 'int' lvalue
              |     |-ImplicitCastExpr 0x7f943282f120 <col:23> 'int *' <LValueToRValue>
              |     | `-DeclRefExpr 0x7f943282f0e0 <col:23> 'int *' lvalue ParmVar 0x7f943282e8b0 'iz2' 'int *'
              |     `-ImplicitCastExpr 0x7f943282f138 <col:27> 'int' <LValueToRValue>
              |       `-DeclRefExpr 0x7f943282f100 <col:27> 'int' lvalue Var 0x7f943282ec78 'j' 'int'
              `-ImplicitCastExpr 0x7f94328303e0 <col:32, col:48> 'double' <LValueToRValue>
                `-ArraySubscriptExpr 0x7f94328303c0 <col:32, col:48> 'double' lvalue
                  |-ImplicitCastExpr 0x7f9432830390 <col:32, col:40> 'double *' <ArrayToPointerDecay>
                  | `-ArraySubscriptExpr 0x7f94328302e0 <col:32, col:40> 'double [m]' lvalue
                  |   |-ImplicitCastExpr 0x7f94328302b0 <col:32> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                  |   | `-DeclRefExpr 0x7f9432830200 <col:32> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f943282e480 'x' 'double (*)[m]':'double (*)[m]'
                  |   `-ImplicitCastExpr 0x7f94328302c8 <col:34, col:39> 'int' <LValueToRValue>
                  |     `-ArraySubscriptExpr 0x7f9432830290 <col:34, col:39> 'int' lvalue
                  |       |-ImplicitCastExpr 0x7f9432830260 <col:34> 'int *' <LValueToRValue>
                  |       | `-DeclRefExpr 0x7f9432830220 <col:34> 'int *' lvalue ParmVar 0x7f943282e730 'ix1' 'int *'
                  |       `-ImplicitCastExpr 0x7f9432830278 <col:38> 'int' <LValueToRValue>
                  |         `-DeclRefExpr 0x7f9432830240 <col:38> 'int' lvalue Var 0x7f943282ecf8 'i' 'int'
                  `-ImplicitCastExpr 0x7f94328303a8 <col:42, col:47> 'int' <LValueToRValue>
                    `-ArraySubscriptExpr 0x7f9432830370 <col:42, col:47> 'int' lvalue
                      |-ImplicitCastExpr 0x7f9432830340 <col:42> 'int *' <LValueToRValue>
                      | `-DeclRefExpr 0x7f9432830300 <col:42> 'int *' lvalue ParmVar 0x7f943282e7b0 'ix2' 'int *'
                      `-ImplicitCastExpr 0x7f9432830358 <col:46> 'int' <LValueToRValue>
                        `-DeclRefExpr 0x7f9432830320 <col:46> 'int' lvalue Var 0x7f943282ec78 'j' 'int'
