TranslationUnitDecl 0x7fc58f838008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fc58f8388a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fc58f8385a0 '__int128'
|-TypedefDecl 0x7fc58f838910 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fc58f8385c0 'unsigned __int128'
|-TypedefDecl 0x7fc58f838bf8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fc58f8389f0 'struct __NSConstantString_tag'
|   `-Record 0x7fc58f838968 '__NSConstantString_tag'
|-TypedefDecl 0x7fc58f838c90 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fc58f838c50 'char *'
|   `-BuiltinType 0x7fc58f8380a0 'char'
|-TypedefDecl 0x7fc58f838f68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fc58f838f10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fc58f838d70 'struct __va_list_tag'
|     `-Record 0x7fc58f838ce8 '__va_list_tag'
|-TypedefDecl 0x7fc58f02fe00 <./tree_src/unaryWholeMatrix_AllSuffixWholeFirstMat.c:4:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7fc58f838160 'unsigned char'
`-FunctionDecl 0x7fc58f030698 <line:11:1, line:21:1> line:11:6 AllSuffixWholeFirstMat 'void (int, int, BOOL (*)[m], BOOL (*)[m])'
  |-ParmVarDecl 0x7fc58f02fe70 <line:12:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fc58f02fef0 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7fc58f0301c0 <col:19, col:30> col:24 used x 'BOOL (*)[m]':'BOOL (*)[m]'
  |-ParmVarDecl 0x7fc58f030470 <col:33, col:44> col:38 used y 'BOOL (*)[m]':'BOOL (*)[m]'
  `-CompoundStmt 0x7fc58f0332e8 <col:48, line:21:1>
    |-DeclStmt 0x7fc58f0308b8 <line:14:5, col:13>
    | |-VarDecl 0x7fc58f0307b8 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x7fc58f030838 <col:5, col:12> col:12 used j 'int'
    `-ForStmt 0x7fc58f0332b0 <line:15:5, line:20:5>
      |-BinaryOperator 0x7fc58f030910 <line:15:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7fc58f0308d0 <col:10> 'int' lvalue Var 0x7fc58f0307b8 'i' 'int'
      | `-IntegerLiteral 0x7fc58f0308f0 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7fc58f0309a0 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7fc58f030970 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fc58f030930 <col:16> 'int' lvalue Var 0x7fc58f0307b8 'i' 'int'
      | `-ImplicitCastExpr 0x7fc58f030988 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7fc58f030950 <col:18> 'int' lvalue ParmVar 0x7fc58f02fe70 'n' 'int'
      |-UnaryOperator 0x7fc58f0309e0 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x7fc58f0309c0 <col:21> 'int' lvalue Var 0x7fc58f0307b8 'i' 'int'
      `-CompoundStmt 0x7fc58f033290 <col:27, line:20:5>
        |-BinaryOperator 0x7fc58f030c70 <line:16:9, col:25> 'BOOL':'unsigned char' '='
        | |-ArraySubscriptExpr 0x7fc58f030b38 <col:9, col:15> 'BOOL':'unsigned char' lvalue
        | | |-ImplicitCastExpr 0x7fc58f030b08 <col:9, col:12> 'BOOL *' <ArrayToPointerDecay>
        | | | `-ArraySubscriptExpr 0x7fc58f030a68 <col:9, col:12> 'BOOL [m]' lvalue
        | | |   |-ImplicitCastExpr 0x7fc58f030a38 <col:9> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
        | | |   | `-DeclRefExpr 0x7fc58f0309f8 <col:9> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fc58f030470 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
        | | |   `-ImplicitCastExpr 0x7fc58f030a50 <col:11> 'int' <LValueToRValue>
        | | |     `-DeclRefExpr 0x7fc58f030a18 <col:11> 'int' lvalue ParmVar 0x7fc58f02fef0 'm' 'int'
        | | `-ImplicitCastExpr 0x7fc58f030b20 <col:14> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x7fc58f030a88 <col:14> 'int' lvalue Var 0x7fc58f0307b8 'i' 'int'
        | `-ImplicitCastExpr 0x7fc58f030c58 <col:19, col:25> 'BOOL':'unsigned char' <LValueToRValue>
        |   `-ArraySubscriptExpr 0x7fc58f030c38 <col:19, col:25> 'BOOL':'unsigned char' lvalue
        |     |-ImplicitCastExpr 0x7fc58f030c08 <col:19, col:22> 'BOOL *' <ArrayToPointerDecay>
        |     | `-ArraySubscriptExpr 0x7fc58f030bc8 <col:19, col:22> 'BOOL [m]' lvalue
        |     |   |-ImplicitCastExpr 0x7fc58f030b98 <col:19> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x7fc58f030b58 <col:19> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fc58f0301c0 'x' 'BOOL (*)[m]':'BOOL (*)[m]'
        |     |   `-ImplicitCastExpr 0x7fc58f030bb0 <col:21> 'int' <LValueToRValue>
        |     |     `-DeclRefExpr 0x7fc58f030b78 <col:21> 'int' lvalue ParmVar 0x7fc58f02fef0 'm' 'int'
        |     `-ImplicitCastExpr 0x7fc58f030c20 <col:24> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x7fc58f030be8 <col:24> 'int' lvalue Var 0x7fc58f0307b8 'i' 'int'
        `-ForStmt 0x7fc58f033258 <line:17:9, line:19:9>
          |-BinaryOperator 0x7fc58f030d28 <line:17:14, col:19> 'int' '='
          | |-DeclRefExpr 0x7fc58f030c90 <col:14> 'int' lvalue Var 0x7fc58f030838 'j' 'int'
          | `-BinaryOperator 0x7fc58f030d08 <col:17, col:19> 'int' '-'
          |   |-ImplicitCastExpr 0x7fc58f030cf0 <col:17> 'int' <LValueToRValue>
          |   | `-DeclRefExpr 0x7fc58f030cb0 <col:17> 'int' lvalue ParmVar 0x7fc58f02fef0 'm' 'int'
          |   `-IntegerLiteral 0x7fc58f030cd0 <col:19> 'int' 1
          |-<<<NULL>>>
          |-BinaryOperator 0x7fc58f030da0 <col:22, col:24> 'int' '>'
          | |-ImplicitCastExpr 0x7fc58f030d88 <col:22> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x7fc58f030d48 <col:22> 'int' lvalue Var 0x7fc58f030838 'j' 'int'
          | `-IntegerLiteral 0x7fc58f030d68 <col:24> 'int' 1
          |-CompoundAssignOperator 0x7fc58f032e18 <col:27, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
          | |-DeclRefExpr 0x7fc58f030dc0 <col:27> 'int' lvalue Var 0x7fc58f030838 'j' 'int'
          | `-UnaryOperator 0x7fc58f032e00 <col:31, col:32> 'int' prefix '-'
          |   `-IntegerLiteral 0x7fc58f030de0 <col:32> 'int' 1
          `-CompoundStmt 0x7fc58f033240 <col:35, line:19:9>
            `-BinaryOperator 0x7fc58f033220 <line:18:6, col:34> 'BOOL':'unsigned char' '='
              |-ArraySubscriptExpr 0x7fc58f032f28 <col:6, col:12> 'BOOL':'unsigned char' lvalue
              | |-ImplicitCastExpr 0x7fc58f032ef8 <col:6, col:9> 'BOOL *' <ArrayToPointerDecay>
              | | `-ArraySubscriptExpr 0x7fc58f032eb8 <col:6, col:9> 'BOOL [m]' lvalue
              | |   |-ImplicitCastExpr 0x7fc58f032e88 <col:6> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
              | |   | `-DeclRefExpr 0x7fc58f032e48 <col:6> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fc58f030470 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
              | |   `-ImplicitCastExpr 0x7fc58f032ea0 <col:8> 'int' <LValueToRValue>
              | |     `-DeclRefExpr 0x7fc58f032e68 <col:8> 'int' lvalue Var 0x7fc58f030838 'j' 'int'
              | `-ImplicitCastExpr 0x7fc58f032f10 <col:11> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x7fc58f032ed8 <col:11> 'int' lvalue Var 0x7fc58f0307b8 'i' 'int'
              `-ImplicitCastExpr 0x7fc58f033208 <col:16, col:34> 'BOOL':'unsigned char' <IntegralCast>
                `-BinaryOperator 0x7fc58f0331e8 <col:16, col:34> 'int' '&'
                  |-ImplicitCastExpr 0x7fc58f0331a0 <col:16, col:24> 'int' <IntegralCast>
                  | `-ImplicitCastExpr 0x7fc58f033188 <col:16, col:24> 'BOOL':'unsigned char' <LValueToRValue>
                  |   `-ArraySubscriptExpr 0x7fc58f033068 <col:16, col:24> 'BOOL':'unsigned char' lvalue
                  |     |-ImplicitCastExpr 0x7fc58f033038 <col:16, col:21> 'BOOL *' <ArrayToPointerDecay>
                  |     | `-ArraySubscriptExpr 0x7fc58f032ff8 <col:16, col:21> 'BOOL [m]' lvalue
                  |     |   |-ImplicitCastExpr 0x7fc58f032fe0 <col:16> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
                  |     |   | `-DeclRefExpr 0x7fc58f032f48 <col:16> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fc58f030470 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
                  |     |   `-BinaryOperator 0x7fc58f032fc0 <col:18, col:20> 'int' '+'
                  |     |     |-ImplicitCastExpr 0x7fc58f032fa8 <col:18> 'int' <LValueToRValue>
                  |     |     | `-DeclRefExpr 0x7fc58f032f68 <col:18> 'int' lvalue Var 0x7fc58f030838 'j' 'int'
                  |     |     `-IntegerLiteral 0x7fc58f032f88 <col:20> 'int' 1
                  |     `-ImplicitCastExpr 0x7fc58f033050 <col:23> 'int' <LValueToRValue>
                  |       `-DeclRefExpr 0x7fc58f033018 <col:23> 'int' lvalue Var 0x7fc58f0307b8 'i' 'int'
                  `-ImplicitCastExpr 0x7fc58f0331d0 <col:28, col:34> 'int' <IntegralCast>
                    `-ImplicitCastExpr 0x7fc58f0331b8 <col:28, col:34> 'BOOL':'unsigned char' <LValueToRValue>
                      `-ArraySubscriptExpr 0x7fc58f033168 <col:28, col:34> 'BOOL':'unsigned char' lvalue
                        |-ImplicitCastExpr 0x7fc58f033138 <col:28, col:31> 'BOOL *' <ArrayToPointerDecay>
                        | `-ArraySubscriptExpr 0x7fc58f0330f8 <col:28, col:31> 'BOOL [m]' lvalue
                        |   |-ImplicitCastExpr 0x7fc58f0330c8 <col:28> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
                        |   | `-DeclRefExpr 0x7fc58f033088 <col:28> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7fc58f0301c0 'x' 'BOOL (*)[m]':'BOOL (*)[m]'
                        |   `-ImplicitCastExpr 0x7fc58f0330e0 <col:30> 'int' <LValueToRValue>
                        |     `-DeclRefExpr 0x7fc58f0330a8 <col:30> 'int' lvalue Var 0x7fc58f030838 'j' 'int'
                        `-ImplicitCastExpr 0x7fc58f033150 <col:33> 'int' <LValueToRValue>
                          `-DeclRefExpr 0x7fc58f033118 <col:33> 'int' lvalue Var 0x7fc58f0307b8 'i' 'int'
