TranslationUnitDecl 0x7febe7838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7febe78394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7febe78391a0 '__int128'
|-TypedefDecl 0x7febe7839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7febe78391c0 'unsigned __int128'
|-TypedefDecl 0x7febe78397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7febe78395f0 'struct __NSConstantString_tag'
|   `-Record 0x7febe7839568 '__NSConstantString_tag'
|-TypedefDecl 0x7febe7839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7febe7839850 'char *'
|   `-BuiltinType 0x7febe7838ca0 'char'
|-TypedefDecl 0x7febe7839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7febe7839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7febe7839970 'struct __va_list_tag'
|     `-Record 0x7febe78398e8 '__va_list_tag'
|-TypedefDecl 0x7febe802f200 <./tree_src/unaryWholeMatrix_AnySuffixWholeFirstMat.c:4:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7febe7838d60 'unsigned char'
`-FunctionDecl 0x7febe802fa98 <line:11:1, line:21:1> line:11:6 AnySuffixWholeFirstMat 'void (int, int, BOOL (*)[m], BOOL (*)[m])'
  |-ParmVarDecl 0x7febe802f270 <line:12:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7febe802f2f0 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7febe802f5c0 <col:19, col:30> col:24 used x 'BOOL (*)[m]':'BOOL (*)[m]'
  |-ParmVarDecl 0x7febe802f870 <col:33, col:44> col:38 used y 'BOOL (*)[m]':'BOOL (*)[m]'
  `-CompoundStmt 0x7febe80326e8 <col:48, line:21:1>
    |-DeclStmt 0x7febe802fcb8 <line:14:5, col:13>
    | |-VarDecl 0x7febe802fbb8 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x7febe802fc38 <col:5, col:12> col:12 used j 'int'
    `-ForStmt 0x7febe80326b0 <line:15:5, line:20:5>
      |-BinaryOperator 0x7febe802fd10 <line:15:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7febe802fcd0 <col:10> 'int' lvalue Var 0x7febe802fbb8 'i' 'int'
      | `-IntegerLiteral 0x7febe802fcf0 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7febe802fda0 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7febe802fd70 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7febe802fd30 <col:16> 'int' lvalue Var 0x7febe802fbb8 'i' 'int'
      | `-ImplicitCastExpr 0x7febe802fd88 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7febe802fd50 <col:18> 'int' lvalue ParmVar 0x7febe802f270 'n' 'int'
      |-UnaryOperator 0x7febe802fde0 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x7febe802fdc0 <col:21> 'int' lvalue Var 0x7febe802fbb8 'i' 'int'
      `-CompoundStmt 0x7febe8032690 <col:27, line:20:5>
        |-BinaryOperator 0x7febe8030070 <line:16:9, col:25> 'BOOL':'unsigned char' '='
        | |-ArraySubscriptExpr 0x7febe802ff38 <col:9, col:15> 'BOOL':'unsigned char' lvalue
        | | |-ImplicitCastExpr 0x7febe802ff08 <col:9, col:12> 'BOOL *' <ArrayToPointerDecay>
        | | | `-ArraySubscriptExpr 0x7febe802fe68 <col:9, col:12> 'BOOL [m]' lvalue
        | | |   |-ImplicitCastExpr 0x7febe802fe38 <col:9> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
        | | |   | `-DeclRefExpr 0x7febe802fdf8 <col:9> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7febe802f870 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
        | | |   `-ImplicitCastExpr 0x7febe802fe50 <col:11> 'int' <LValueToRValue>
        | | |     `-DeclRefExpr 0x7febe802fe18 <col:11> 'int' lvalue ParmVar 0x7febe802f2f0 'm' 'int'
        | | `-ImplicitCastExpr 0x7febe802ff20 <col:14> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x7febe802fe88 <col:14> 'int' lvalue Var 0x7febe802fbb8 'i' 'int'
        | `-ImplicitCastExpr 0x7febe8030058 <col:19, col:25> 'BOOL':'unsigned char' <LValueToRValue>
        |   `-ArraySubscriptExpr 0x7febe8030038 <col:19, col:25> 'BOOL':'unsigned char' lvalue
        |     |-ImplicitCastExpr 0x7febe8030008 <col:19, col:22> 'BOOL *' <ArrayToPointerDecay>
        |     | `-ArraySubscriptExpr 0x7febe802ffc8 <col:19, col:22> 'BOOL [m]' lvalue
        |     |   |-ImplicitCastExpr 0x7febe802ff98 <col:19> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x7febe802ff58 <col:19> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7febe802f5c0 'x' 'BOOL (*)[m]':'BOOL (*)[m]'
        |     |   `-ImplicitCastExpr 0x7febe802ffb0 <col:21> 'int' <LValueToRValue>
        |     |     `-DeclRefExpr 0x7febe802ff78 <col:21> 'int' lvalue ParmVar 0x7febe802f2f0 'm' 'int'
        |     `-ImplicitCastExpr 0x7febe8030020 <col:24> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x7febe802ffe8 <col:24> 'int' lvalue Var 0x7febe802fbb8 'i' 'int'
        `-ForStmt 0x7febe8032658 <line:17:9, line:19:8>
          |-BinaryOperator 0x7febe8030128 <line:17:14, col:19> 'int' '='
          | |-DeclRefExpr 0x7febe8030090 <col:14> 'int' lvalue Var 0x7febe802fc38 'j' 'int'
          | `-BinaryOperator 0x7febe8030108 <col:17, col:19> 'int' '-'
          |   |-ImplicitCastExpr 0x7febe80300f0 <col:17> 'int' <LValueToRValue>
          |   | `-DeclRefExpr 0x7febe80300b0 <col:17> 'int' lvalue ParmVar 0x7febe802f2f0 'm' 'int'
          |   `-IntegerLiteral 0x7febe80300d0 <col:19> 'int' 1
          |-<<<NULL>>>
          |-BinaryOperator 0x7febe80301a0 <col:22, col:24> 'int' '>'
          | |-ImplicitCastExpr 0x7febe8030188 <col:22> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x7febe8030148 <col:22> 'int' lvalue Var 0x7febe802fc38 'j' 'int'
          | `-IntegerLiteral 0x7febe8030168 <col:24> 'int' 1
          |-CompoundAssignOperator 0x7febe8032218 <col:27, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
          | |-DeclRefExpr 0x7febe80301c0 <col:27> 'int' lvalue Var 0x7febe802fc38 'j' 'int'
          | `-UnaryOperator 0x7febe8032200 <col:31, col:32> 'int' prefix '-'
          |   `-IntegerLiteral 0x7febe80301e0 <col:32> 'int' 1
          `-CompoundStmt 0x7febe8032640 <col:35, line:19:8>
            `-BinaryOperator 0x7febe8032620 <line:18:6, col:34> 'BOOL':'unsigned char' '='
              |-ArraySubscriptExpr 0x7febe8032328 <col:6, col:12> 'BOOL':'unsigned char' lvalue
              | |-ImplicitCastExpr 0x7febe80322f8 <col:6, col:9> 'BOOL *' <ArrayToPointerDecay>
              | | `-ArraySubscriptExpr 0x7febe80322b8 <col:6, col:9> 'BOOL [m]' lvalue
              | |   |-ImplicitCastExpr 0x7febe8032288 <col:6> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
              | |   | `-DeclRefExpr 0x7febe8032248 <col:6> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7febe802f870 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
              | |   `-ImplicitCastExpr 0x7febe80322a0 <col:8> 'int' <LValueToRValue>
              | |     `-DeclRefExpr 0x7febe8032268 <col:8> 'int' lvalue Var 0x7febe802fc38 'j' 'int'
              | `-ImplicitCastExpr 0x7febe8032310 <col:11> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x7febe80322d8 <col:11> 'int' lvalue Var 0x7febe802fbb8 'i' 'int'
              `-ImplicitCastExpr 0x7febe8032608 <col:16, col:34> 'BOOL':'unsigned char' <IntegralCast>
                `-BinaryOperator 0x7febe80325e8 <col:16, col:34> 'int' '|'
                  |-ImplicitCastExpr 0x7febe80325a0 <col:16, col:24> 'int' <IntegralCast>
                  | `-ImplicitCastExpr 0x7febe8032588 <col:16, col:24> 'BOOL':'unsigned char' <LValueToRValue>
                  |   `-ArraySubscriptExpr 0x7febe8032468 <col:16, col:24> 'BOOL':'unsigned char' lvalue
                  |     |-ImplicitCastExpr 0x7febe8032438 <col:16, col:21> 'BOOL *' <ArrayToPointerDecay>
                  |     | `-ArraySubscriptExpr 0x7febe80323f8 <col:16, col:21> 'BOOL [m]' lvalue
                  |     |   |-ImplicitCastExpr 0x7febe80323e0 <col:16> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
                  |     |   | `-DeclRefExpr 0x7febe8032348 <col:16> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7febe802f870 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
                  |     |   `-BinaryOperator 0x7febe80323c0 <col:18, col:20> 'int' '+'
                  |     |     |-ImplicitCastExpr 0x7febe80323a8 <col:18> 'int' <LValueToRValue>
                  |     |     | `-DeclRefExpr 0x7febe8032368 <col:18> 'int' lvalue Var 0x7febe802fc38 'j' 'int'
                  |     |     `-IntegerLiteral 0x7febe8032388 <col:20> 'int' 1
                  |     `-ImplicitCastExpr 0x7febe8032450 <col:23> 'int' <LValueToRValue>
                  |       `-DeclRefExpr 0x7febe8032418 <col:23> 'int' lvalue Var 0x7febe802fbb8 'i' 'int'
                  `-ImplicitCastExpr 0x7febe80325d0 <col:28, col:34> 'int' <IntegralCast>
                    `-ImplicitCastExpr 0x7febe80325b8 <col:28, col:34> 'BOOL':'unsigned char' <LValueToRValue>
                      `-ArraySubscriptExpr 0x7febe8032568 <col:28, col:34> 'BOOL':'unsigned char' lvalue
                        |-ImplicitCastExpr 0x7febe8032538 <col:28, col:31> 'BOOL *' <ArrayToPointerDecay>
                        | `-ArraySubscriptExpr 0x7febe80324f8 <col:28, col:31> 'BOOL [m]' lvalue
                        |   |-ImplicitCastExpr 0x7febe80324c8 <col:28> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
                        |   | `-DeclRefExpr 0x7febe8032488 <col:28> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7febe802f5c0 'x' 'BOOL (*)[m]':'BOOL (*)[m]'
                        |   `-ImplicitCastExpr 0x7febe80324e0 <col:30> 'int' <LValueToRValue>
                        |     `-DeclRefExpr 0x7febe80324a8 <col:30> 'int' lvalue Var 0x7febe802fc38 'j' 'int'
                        `-ImplicitCastExpr 0x7febe8032550 <col:33> 'int' <LValueToRValue>
                          `-DeclRefExpr 0x7febe8032518 <col:33> 'int' lvalue Var 0x7febe802fbb8 'i' 'int'
