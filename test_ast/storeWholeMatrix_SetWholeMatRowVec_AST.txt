TranslationUnitDecl 0x7fce4f038c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fce4f0394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fce4f0391a0 '__int128'
|-TypedefDecl 0x7fce4f039510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fce4f0391c0 'unsigned __int128'
|-TypedefDecl 0x7fce4f0397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fce4f0395f0 'struct __NSConstantString_tag'
|   `-Record 0x7fce4f039568 '__NSConstantString_tag'
|-TypedefDecl 0x7fce4f039890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fce4f039850 'char *'
|   `-BuiltinType 0x7fce4f038ca0 'char'
|-TypedefDecl 0x7fce4f039b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fce4f039b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fce4f039970 'struct __va_list_tag'
|     `-Record 0x7fce4f0398e8 '__va_list_tag'
`-FunctionDecl 0x7fce4f82e848 <./tree_src/storeWholeMatrix_SetWholeMatRowVec.c:1:1, line:8:1> line:1:6 SetWholeMatRowVec 'void (int, int, double *, double (*)[m], int)'
  |-ParmVarDecl 0x7fce4f82e200 <line:2:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fce4f82e280 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7fce4f82e400 <col:19, col:29> col:26 used x 'double *':'double *'
  |-ParmVarDecl 0x7fce4f82e600 <col:32, col:45> col:39 used z 'double (*)[m]':'double (*)[m]'
  |-ParmVarDecl 0x7fce4f82e680 <col:48, col:52> col:52 used p 'int'
  `-CompoundStmt 0x7fce4f82ed30 <col:56, line:8:1>
    |-DeclStmt 0x7fce4f82e9d8 <line:4:5, col:10>
    | `-VarDecl 0x7fce4f82e970 <col:5, col:9> col:9 used j 'int'
    `-ForStmt 0x7fce4f82ecf8 <line:5:5, line:7:5>
      |-BinaryOperator 0x7fce4f82ea30 <line:5:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7fce4f82e9f0 <col:10> 'int' lvalue Var 0x7fce4f82e970 'j' 'int'
      | `-IntegerLiteral 0x7fce4f82ea10 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7fce4f82eac0 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7fce4f82ea90 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fce4f82ea50 <col:16> 'int' lvalue Var 0x7fce4f82e970 'j' 'int'
      | `-ImplicitCastExpr 0x7fce4f82eaa8 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7fce4f82ea70 <col:18> 'int' lvalue ParmVar 0x7fce4f82e280 'm' 'int'
      |-UnaryOperator 0x7fce4f82eb00 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x7fce4f82eae0 <col:21> 'int' lvalue Var 0x7fce4f82e970 'j' 'int'
      `-CompoundStmt 0x7fce4f82ece0 <col:27, line:7:5>
        `-BinaryOperator 0x7fce4f82ecc0 <line:6:9, col:22> 'double' '='
          |-ArraySubscriptExpr 0x7fce4f82ebf8 <col:9, col:15> 'double' lvalue
          | |-ImplicitCastExpr 0x7fce4f82ebc8 <col:9, col:12> 'double *' <ArrayToPointerDecay>
          | | `-ArraySubscriptExpr 0x7fce4f82eb88 <col:9, col:12> 'double [m]' lvalue
          | |   |-ImplicitCastExpr 0x7fce4f82eb58 <col:9> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
          | |   | `-DeclRefExpr 0x7fce4f82eb18 <col:9> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7fce4f82e600 'z' 'double (*)[m]':'double (*)[m]'
          | |   `-ImplicitCastExpr 0x7fce4f82eb70 <col:11> 'int' <LValueToRValue>
          | |     `-DeclRefExpr 0x7fce4f82eb38 <col:11> 'int' lvalue ParmVar 0x7fce4f82e680 'p' 'int'
          | `-ImplicitCastExpr 0x7fce4f82ebe0 <col:14> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7fce4f82eba8 <col:14> 'int' lvalue Var 0x7fce4f82e970 'j' 'int'
          `-ImplicitCastExpr 0x7fce4f82eca8 <col:19, col:22> 'double' <LValueToRValue>
            `-ArraySubscriptExpr 0x7fce4f82ec88 <col:19, col:22> 'double' lvalue
              |-ImplicitCastExpr 0x7fce4f82ec58 <col:19> 'double *':'double *' <LValueToRValue>
              | `-DeclRefExpr 0x7fce4f82ec18 <col:19> 'double *':'double *' lvalue ParmVar 0x7fce4f82e400 'x' 'double *':'double *'
              `-ImplicitCastExpr 0x7fce4f82ec70 <col:21> 'int' <LValueToRValue>
                `-DeclRefExpr 0x7fce4f82ec38 <col:21> 'int' lvalue Var 0x7fce4f82e970 'j' 'int'
