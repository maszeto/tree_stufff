TranslationUnitDecl 0x7fbdd7038c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fbdd70394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fbdd70391a0 '__int128'
|-TypedefDecl 0x7fbdd7039510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fbdd70391c0 'unsigned __int128'
|-TypedefDecl 0x7fbdd70397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fbdd70395f0 'struct __NSConstantString_tag'
|   `-Record 0x7fbdd7039568 '__NSConstantString_tag'
|-TypedefDecl 0x7fbdd7039890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fbdd7039850 'char *'
|   `-BuiltinType 0x7fbdd7038ca0 'char'
|-TypedefDecl 0x7fbdd7039b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fbdd7039b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fbdd7039970 'struct __va_list_tag'
|     `-Record 0x7fbdd70398e8 '__va_list_tag'
|-TypedefDecl 0x7fbdd782f200 <./tree_src/extendWholeVector_OrWholeScaVec.c:3:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7fbdd7038d60 'unsigned char'
`-FunctionDecl 0x7fbdd782f7d8 <line:6:1, line:13:1> line:6:6 OrWholeScaVec 'void (int, BOOL, BOOL *, BOOL *)'
  |-ParmVarDecl 0x7fbdd782f270 <line:7:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fbdd782f310 <col:12, col:17> col:17 used x 'BOOL':'unsigned char'
  |-ParmVarDecl 0x7fbdd782f500 <col:20, col:28> col:25 used y 'BOOL *':'BOOL *'
  |-ParmVarDecl 0x7fbdd782f690 <col:31, col:39> col:36 used z 'BOOL *':'BOOL *'
  `-CompoundStmt 0x7fbdd782fc90 <col:43, line:13:1>
    |-DeclStmt 0x7fbdd782f960 <line:9:5, col:10>
    | `-VarDecl 0x7fbdd782f8f8 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x7fbdd782fc58 <line:10:5, line:12:5>
      |-BinaryOperator 0x7fbdd782f9b8 <line:10:10, col:14> 'int' '='
      | |-DeclRefExpr 0x7fbdd782f978 <col:10> 'int' lvalue Var 0x7fbdd782f8f8 'i' 'int'
      | `-IntegerLiteral 0x7fbdd782f998 <col:14> 'int' 0
      |-<<<NULL>>>
      |-ImplicitCastExpr 0x7fbdd782f9f8 <col:17> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x7fbdd782f9d8 <col:17> 'int' lvalue ParmVar 0x7fbdd782f270 'n' 'int'
      |-UnaryOperator 0x7fbdd782fa30 <col:20, col:22> 'int' prefix '++'
      | `-DeclRefExpr 0x7fbdd782fa10 <col:22> 'int' lvalue Var 0x7fbdd782f8f8 'i' 'int'
      `-CompoundStmt 0x7fbdd782fc40 <col:26, line:12:5>
        `-BinaryOperator 0x7fbdd782fc20 <line:11:9, col:23> 'BOOL':'unsigned char' '='
          |-ArraySubscriptExpr 0x7fbdd782fab8 <col:9, col:12> 'BOOL':'unsigned char' lvalue
          | |-ImplicitCastExpr 0x7fbdd782fa88 <col:9> 'BOOL *':'BOOL *' <LValueToRValue>
          | | `-DeclRefExpr 0x7fbdd782fa48 <col:9> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fbdd782f690 'z' 'BOOL *':'BOOL *'
          | `-ImplicitCastExpr 0x7fbdd782faa0 <col:11> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7fbdd782fa68 <col:11> 'int' lvalue Var 0x7fbdd782f8f8 'i' 'int'
          `-ImplicitCastExpr 0x7fbdd782fc08 <col:16, col:23> 'BOOL':'unsigned char' <IntegralCast>
            `-BinaryOperator 0x7fbdd782fbe8 <col:16, col:23> 'int' '|'
              |-ImplicitCastExpr 0x7fbdd782fba0 <col:16> 'int' <IntegralCast>
              | `-ImplicitCastExpr 0x7fbdd782fb88 <col:16> 'BOOL':'unsigned char' <LValueToRValue>
              |   `-DeclRefExpr 0x7fbdd782fad8 <col:16> 'BOOL':'unsigned char' lvalue ParmVar 0x7fbdd782f310 'x' 'BOOL':'unsigned char'
              `-ImplicitCastExpr 0x7fbdd782fbd0 <col:20, col:23> 'int' <IntegralCast>
                `-ImplicitCastExpr 0x7fbdd782fbb8 <col:20, col:23> 'BOOL':'unsigned char' <LValueToRValue>
                  `-ArraySubscriptExpr 0x7fbdd782fb68 <col:20, col:23> 'BOOL':'unsigned char' lvalue
                    |-ImplicitCastExpr 0x7fbdd782fb38 <col:20> 'BOOL *':'BOOL *' <LValueToRValue>
                    | `-DeclRefExpr 0x7fbdd782faf8 <col:20> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fbdd782f500 'y' 'BOOL *':'BOOL *'
                    `-ImplicitCastExpr 0x7fbdd782fb50 <col:22> 'int' <LValueToRValue>
                      `-DeclRefExpr 0x7fbdd782fb18 <col:22> 'int' lvalue Var 0x7fbdd782f8f8 'i' 'int'
