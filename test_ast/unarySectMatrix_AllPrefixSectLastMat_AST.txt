TranslationUnitDecl 0x7faa0c838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7faa0c8394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7faa0c8391a0 '__int128'
|-TypedefDecl 0x7faa0c839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7faa0c8391c0 'unsigned __int128'
|-TypedefDecl 0x7faa0c8397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7faa0c8395f0 'struct __NSConstantString_tag'
|   `-Record 0x7faa0c839568 '__NSConstantString_tag'
|-TypedefDecl 0x7faa0c839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7faa0c839850 'char *'
|   `-BuiltinType 0x7faa0c838ca0 'char'
|-TypedefDecl 0x7faa0c839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7faa0c839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7faa0c839970 'struct __va_list_tag'
|     `-Record 0x7faa0c8398e8 '__va_list_tag'
|-TypedefDecl 0x7faa0c891600 <./tree_src/unarySectMatrix_AllPrefixSectLastMat.c:4:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7faa0c838d60 'unsigned char'
`-FunctionDecl 0x7faa0c894768 <line:11:1, line:25:1> line:11:6 AllPrefixSectLastMat 'void (int, int, int, int, BOOL (*)[mx], BOOL (*)[my], int, int, int, int, int, int, int, int, int, int, int, int)'
  |-ParmVarDecl 0x7faa0c891670 <line:12:5, col:9> col:9 used nx 'int'
  |-ParmVarDecl 0x7faa0c8916f0 <col:13, col:17> col:17 used mx 'int'
  |-ParmVarDecl 0x7faa0c891770 <col:21, col:25> col:25 used ny 'int'
  |-ParmVarDecl 0x7faa0c8917f0 <col:29, col:33> col:33 used my 'int'
  |-ParmVarDecl 0x7faa0c891ac0 <col:37, col:50> col:42 used x 'BOOL (*)[mx]':'BOOL (*)[mx]'
  |-ParmVarDecl 0x7faa0c891d70 <col:53, col:66> col:58 used y 'BOOL (*)[my]':'BOOL (*)[my]'
  |-ParmVarDecl 0x7faa0c891df0 <line:13:5, col:9> col:9 used startx1 'int'
  |-ParmVarDecl 0x7faa0c891e70 <col:18, col:22> col:22 used stopx1 'int'
  |-ParmVarDecl 0x7faa0c891ef0 <col:30, col:34> col:34 used stepx1 'int'
  |-ParmVarDecl 0x7faa0c891f70 <col:42, col:46> col:46 used startx2 'int'
  |-ParmVarDecl 0x7faa0c891ff0 <col:55, col:59> col:59 used stopx2 'int'
  |-ParmVarDecl 0x7faa0c892070 <col:67, col:71> col:71 used stepx2 'int'
  |-ParmVarDecl 0x7faa0c8920f0 <line:14:5, col:9> col:9 used starty1 'int'
  |-ParmVarDecl 0x7faa0c892170 <col:18, col:22> col:22 stopy1 'int'
  |-ParmVarDecl 0x7faa0c8921f0 <col:30, col:34> col:34 stepy1 'int'
  |-ParmVarDecl 0x7faa0c892270 <col:42, col:46> col:46 used starty2 'int'
  |-ParmVarDecl 0x7faa0c8922f0 <col:55, col:59> col:59 stopy2 'int'
  |-ParmVarDecl 0x7faa0c892370 <col:67, col:71> col:71 stepy2 'int'
  `-CompoundStmt 0x7faa0c895708 <col:79, line:25:1>
    |-DeclStmt 0x7faa0c894b08 <line:16:5, col:23>
    | |-VarDecl 0x7faa0c8948f8 <col:5, col:9> col:9 used ix 'int'
    | |-VarDecl 0x7faa0c894978 <col:5, col:13> col:13 used jx 'int'
    | |-VarDecl 0x7faa0c8949f8 <col:5, col:17> col:17 used iy 'int'
    | `-VarDecl 0x7faa0c894a78 <col:5, col:21> col:21 used jy 'int'
    |-BinaryOperator 0x7faa0c894b78 <line:17:5, col:10> 'int' '='
    | |-DeclRefExpr 0x7faa0c894b20 <col:5> 'int' lvalue Var 0x7faa0c8949f8 'iy' 'int'
    | `-ImplicitCastExpr 0x7faa0c894b60 <col:10> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x7faa0c894b40 <col:10> 'int' lvalue ParmVar 0x7faa0c8920f0 'starty1' 'int'
    `-ForStmt 0x7faa0c8956d0 <line:18:5, line:24:5>
      |-BinaryOperator 0x7faa0c894bf0 <line:18:10, col:14> 'int' '='
      | |-DeclRefExpr 0x7faa0c894b98 <col:10> 'int' lvalue Var 0x7faa0c8948f8 'ix' 'int'
      | `-ImplicitCastExpr 0x7faa0c894bd8 <col:14> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7faa0c894bb8 <col:14> 'int' lvalue ParmVar 0x7faa0c891df0 'startx1' 'int'
      |-<<<NULL>>>
      |-BinaryOperator 0x7faa0c894c80 <col:23, col:26> 'int' '<'
      | |-ImplicitCastExpr 0x7faa0c894c50 <col:23> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7faa0c894c10 <col:23> 'int' lvalue Var 0x7faa0c8948f8 'ix' 'int'
      | `-ImplicitCastExpr 0x7faa0c894c68 <col:26> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7faa0c894c30 <col:26> 'int' lvalue ParmVar 0x7faa0c891e70 'stopx1' 'int'
      |-CompoundAssignOperator 0x7faa0c894cf8 <col:34, col:39> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
      | |-DeclRefExpr 0x7faa0c894ca0 <col:34> 'int' lvalue Var 0x7faa0c8948f8 'ix' 'int'
      | `-ImplicitCastExpr 0x7faa0c894ce0 <col:39> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7faa0c894cc0 <col:39> 'int' lvalue ParmVar 0x7faa0c891ef0 'stepx1' 'int'
      `-CompoundStmt 0x7faa0c8956a8 <col:48, line:24:5>
        |-BinaryOperator 0x7faa0c894fa0 <line:19:9, col:39> 'BOOL':'unsigned char' '='
        | |-ArraySubscriptExpr 0x7faa0c894e68 <col:9, col:22> 'BOOL':'unsigned char' lvalue
        | | |-ImplicitCastExpr 0x7faa0c894e38 <col:9, col:13> 'BOOL *' <ArrayToPointerDecay>
        | | | `-ArraySubscriptExpr 0x7faa0c894d98 <col:9, col:13> 'BOOL [my]' lvalue
        | | |   |-ImplicitCastExpr 0x7faa0c894d68 <col:9> 'BOOL (*)[my]':'BOOL (*)[my]' <LValueToRValue>
        | | |   | `-DeclRefExpr 0x7faa0c894d28 <col:9> 'BOOL (*)[my]':'BOOL (*)[my]' lvalue ParmVar 0x7faa0c891d70 'y' 'BOOL (*)[my]':'BOOL (*)[my]'
        | | |   `-ImplicitCastExpr 0x7faa0c894d80 <col:11> 'int' <LValueToRValue>
        | | |     `-DeclRefExpr 0x7faa0c894d48 <col:11> 'int' lvalue Var 0x7faa0c8949f8 'iy' 'int'
        | | `-ImplicitCastExpr 0x7faa0c894e50 <col:15> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x7faa0c894db8 <col:15> 'int' lvalue ParmVar 0x7faa0c8920f0 'starty1' 'int'
        | `-ImplicitCastExpr 0x7faa0c894f88 <col:26, col:39> 'BOOL':'unsigned char' <LValueToRValue>
        |   `-ArraySubscriptExpr 0x7faa0c894f68 <col:26, col:39> 'BOOL':'unsigned char' lvalue
        |     |-ImplicitCastExpr 0x7faa0c894f38 <col:26, col:30> 'BOOL *' <ArrayToPointerDecay>
        |     | `-ArraySubscriptExpr 0x7faa0c894ef8 <col:26, col:30> 'BOOL [mx]' lvalue
        |     |   |-ImplicitCastExpr 0x7faa0c894ec8 <col:26> 'BOOL (*)[mx]':'BOOL (*)[mx]' <LValueToRValue>
        |     |   | `-DeclRefExpr 0x7faa0c894e88 <col:26> 'BOOL (*)[mx]':'BOOL (*)[mx]' lvalue ParmVar 0x7faa0c891ac0 'x' 'BOOL (*)[mx]':'BOOL (*)[mx]'
        |     |   `-ImplicitCastExpr 0x7faa0c894ee0 <col:28> 'int' <LValueToRValue>
        |     |     `-DeclRefExpr 0x7faa0c894ea8 <col:28> 'int' lvalue Var 0x7faa0c8948f8 'ix' 'int'
        |     `-ImplicitCastExpr 0x7faa0c894f50 <col:32> 'int' <LValueToRValue>
        |       `-DeclRefExpr 0x7faa0c894f18 <col:32> 'int' lvalue ParmVar 0x7faa0c891df0 'startx1' 'int'
        |-BinaryOperator 0x7faa0c895058 <line:20:9, col:22> 'int' '='
        | |-DeclRefExpr 0x7faa0c894fc0 <col:9> 'int' lvalue Var 0x7faa0c894a78 'jy' 'int'
        | `-BinaryOperator 0x7faa0c895038 <col:14, col:22> 'int' '+'
        |   |-ImplicitCastExpr 0x7faa0c895020 <col:14> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x7faa0c894fe0 <col:14> 'int' lvalue ParmVar 0x7faa0c892270 'starty2' 'int'
        |   `-IntegerLiteral 0x7faa0c895000 <col:22> 'int' 1
        `-ForStmt 0x7faa0c895670 <line:21:9, line:23:9>
          |-BinaryOperator 0x7faa0c895110 <line:21:14, col:26> 'int' '='
          | |-DeclRefExpr 0x7faa0c895078 <col:14> 'int' lvalue Var 0x7faa0c894978 'jx' 'int'
          | `-BinaryOperator 0x7faa0c8950f0 <col:18, col:26> 'int' '+'
          |   |-ImplicitCastExpr 0x7faa0c8950d8 <col:18> 'int' <LValueToRValue>
          |   | `-DeclRefExpr 0x7faa0c895098 <col:18> 'int' lvalue ParmVar 0x7faa0c891f70 'startx2' 'int'
          |   `-IntegerLiteral 0x7faa0c8950b8 <col:26> 'int' 1
          |-<<<NULL>>>
          |-BinaryOperator 0x7faa0c8951a0 <col:29, col:32> 'int' '<'
          | |-ImplicitCastExpr 0x7faa0c895170 <col:29> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x7faa0c895130 <col:29> 'int' lvalue Var 0x7faa0c894978 'jx' 'int'
          | `-ImplicitCastExpr 0x7faa0c895188 <col:32> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7faa0c895150 <col:32> 'int' lvalue ParmVar 0x7faa0c891ff0 'stopx2' 'int'
          |-CompoundAssignOperator 0x7faa0c895218 <col:40, col:45> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
          | |-DeclRefExpr 0x7faa0c8951c0 <col:40> 'int' lvalue Var 0x7faa0c894978 'jx' 'int'
          | `-ImplicitCastExpr 0x7faa0c895200 <col:45> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7faa0c8951e0 <col:45> 'int' lvalue ParmVar 0x7faa0c892070 'stepx2' 'int'
          `-CompoundStmt 0x7faa0c895658 <col:54, line:23:9>
            `-BinaryOperator 0x7faa0c895638 <line:22:13, col:47> 'BOOL':'unsigned char' '='
              |-ArraySubscriptExpr 0x7faa0c895328 <col:13, col:21> 'BOOL':'unsigned char' lvalue
              | |-ImplicitCastExpr 0x7faa0c8952f8 <col:13, col:17> 'BOOL *' <ArrayToPointerDecay>
              | | `-ArraySubscriptExpr 0x7faa0c8952b8 <col:13, col:17> 'BOOL [my]' lvalue
              | |   |-ImplicitCastExpr 0x7faa0c895288 <col:13> 'BOOL (*)[my]':'BOOL (*)[my]' <LValueToRValue>
              | |   | `-DeclRefExpr 0x7faa0c895248 <col:13> 'BOOL (*)[my]':'BOOL (*)[my]' lvalue ParmVar 0x7faa0c891d70 'y' 'BOOL (*)[my]':'BOOL (*)[my]'
              | |   `-ImplicitCastExpr 0x7faa0c8952a0 <col:15> 'int' <LValueToRValue>
              | |     `-DeclRefExpr 0x7faa0c895268 <col:15> 'int' lvalue Var 0x7faa0c8949f8 'iy' 'int'
              | `-ImplicitCastExpr 0x7faa0c895310 <col:19> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x7faa0c8952d8 <col:19> 'int' lvalue Var 0x7faa0c894a78 'jy' 'int'
              `-ImplicitCastExpr 0x7faa0c895620 <col:25, col:47> 'BOOL':'unsigned char' <IntegralCast>
                `-BinaryOperator 0x7faa0c895600 <col:25, col:47> 'int' '&'
                  |-ImplicitCastExpr 0x7faa0c8955a0 <col:25, col:35> 'int' <IntegralCast>
                  | `-ImplicitCastExpr 0x7faa0c895588 <col:25, col:35> 'BOOL':'unsigned char' <LValueToRValue>
                  |   `-ArraySubscriptExpr 0x7faa0c895468 <col:25, col:35> 'BOOL':'unsigned char' lvalue
                  |     |-ImplicitCastExpr 0x7faa0c895450 <col:25, col:29> 'BOOL *' <ArrayToPointerDecay>
                  |     | `-ArraySubscriptExpr 0x7faa0c8953b8 <col:25, col:29> 'BOOL [my]' lvalue
                  |     |   |-ImplicitCastExpr 0x7faa0c895388 <col:25> 'BOOL (*)[my]':'BOOL (*)[my]' <LValueToRValue>
                  |     |   | `-DeclRefExpr 0x7faa0c895348 <col:25> 'BOOL (*)[my]':'BOOL (*)[my]' lvalue ParmVar 0x7faa0c891d70 'y' 'BOOL (*)[my]':'BOOL (*)[my]'
                  |     |   `-ImplicitCastExpr 0x7faa0c8953a0 <col:27> 'int' <LValueToRValue>
                  |     |     `-DeclRefExpr 0x7faa0c895368 <col:27> 'int' lvalue Var 0x7faa0c8949f8 'iy' 'int'
                  |     `-BinaryOperator 0x7faa0c895430 <col:31, col:34> 'int' '-'
                  |       |-ImplicitCastExpr 0x7faa0c895418 <col:31> 'int' <LValueToRValue>
                  |       | `-DeclRefExpr 0x7faa0c8953d8 <col:31> 'int' lvalue Var 0x7faa0c894a78 'jy' 'int'
                  |       `-IntegerLiteral 0x7faa0c8953f8 <col:34> 'int' 1
                  `-ImplicitCastExpr 0x7faa0c8955d0 <col:39, col:47> 'int' <IntegralCast>
                    `-ImplicitCastExpr 0x7faa0c8955b8 <col:39, col:47> 'BOOL':'unsigned char' <LValueToRValue>
                      `-ArraySubscriptExpr 0x7faa0c895568 <col:39, col:47> 'BOOL':'unsigned char' lvalue
                        |-ImplicitCastExpr 0x7faa0c895538 <col:39, col:43> 'BOOL *' <ArrayToPointerDecay>
                        | `-ArraySubscriptExpr 0x7faa0c8954f8 <col:39, col:43> 'BOOL [mx]' lvalue
                        |   |-ImplicitCastExpr 0x7faa0c8954c8 <col:39> 'BOOL (*)[mx]':'BOOL (*)[mx]' <LValueToRValue>
                        |   | `-DeclRefExpr 0x7faa0c895488 <col:39> 'BOOL (*)[mx]':'BOOL (*)[mx]' lvalue ParmVar 0x7faa0c891ac0 'x' 'BOOL (*)[mx]':'BOOL (*)[mx]'
                        |   `-ImplicitCastExpr 0x7faa0c8954e0 <col:41> 'int' <LValueToRValue>
                        |     `-DeclRefExpr 0x7faa0c8954a8 <col:41> 'int' lvalue Var 0x7faa0c8948f8 'ix' 'int'
                        `-ImplicitCastExpr 0x7faa0c895550 <col:45> 'int' <LValueToRValue>
                          `-DeclRefExpr 0x7faa0c895518 <col:45> 'int' lvalue Var 0x7faa0c894978 'jx' 'int'
