TranslationUnitDecl 0x7f8608038c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f86080394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f86080391a0 '__int128'
|-TypedefDecl 0x7f8608039510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f86080391c0 'unsigned __int128'
|-TypedefDecl 0x7f86080397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f86080395f0 'struct __NSConstantString_tag'
|   `-Record 0x7f8608039568 '__NSConstantString_tag'
|-TypedefDecl 0x7f8608039890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f8608039850 'char *'
|   `-BuiltinType 0x7f8608038ca0 'char'
|-TypedefDecl 0x7f8608039b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f8608039b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f8608039970 'struct __va_list_tag'
|     `-Record 0x7f86080398e8 '__va_list_tag'
`-FunctionDecl 0x7f8608090b98 <./tree_src/starWholeMatrix_WtAddSumStar9Mat.c:2:1, line:14:1> line:2:6 WtAddSumStar9Mat 'void (int, int, double (*)[m], double *)'
  |-ParmVarDecl 0x7f8608090600 <line:3:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7f8608090680 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7f8608090880 <col:19, col:32> col:26 used x 'double (*)[m]':'double (*)[m]'
  |-ParmVarDecl 0x7f86080909e0 <col:35, col:45> col:42 used y 'double *':'double *'
  `-CompoundStmt 0x7f8608092600 <col:49, line:14:1>
    |-DeclStmt 0x7f8608090db8 <line:5:5, col:13>
    | |-VarDecl 0x7f8608090cb8 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x7f8608090d38 <col:5, col:12> col:12 used j 'int'
    `-ForStmt 0x7f86080925b0 <line:6:5, line:13:5>
      |-BinaryOperator 0x7f8608090e10 <line:6:10, col:14> 'int' '='
      | |-DeclRefExpr 0x7f8608090dd0 <col:10> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
      | `-IntegerLiteral 0x7f8608090df0 <col:14> 'int' 1
      |-<<<NULL>>>
      |-BinaryOperator 0x7f8608090e88 <col:17, col:19> 'int' '-'
      | |-ImplicitCastExpr 0x7f8608090e70 <col:17> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7f8608090e30 <col:17> 'int' lvalue ParmVar 0x7f8608090600 'n' 'int'
      | `-IntegerLiteral 0x7f8608090e50 <col:19> 'int' 1
      |-UnaryOperator 0x7f8608090ec8 <col:22, col:23> 'int' postfix '++'
      | `-DeclRefExpr 0x7f8608090ea8 <col:22> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
      `-CompoundStmt 0x7f8608092598 <col:28, line:13:5>
        `-ForStmt 0x7f8608092560 <line:7:9, line:12:9>
          |-BinaryOperator 0x7f8608090f20 <line:7:14, col:18> 'int' '='
          | |-DeclRefExpr 0x7f8608090ee0 <col:14> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
          | `-IntegerLiteral 0x7f8608090f00 <col:18> 'int' 1
          |-<<<NULL>>>
          |-BinaryOperator 0x7f8608090f98 <col:21, col:23> 'int' '-'
          | |-ImplicitCastExpr 0x7f8608090f80 <col:21> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x7f8608090f40 <col:21> 'int' lvalue ParmVar 0x7f8608090680 'm' 'int'
          | `-IntegerLiteral 0x7f8608090f60 <col:23> 'int' 1
          |-UnaryOperator 0x7f8608090fd8 <col:26, col:27> 'int' postfix '++'
          | `-DeclRefExpr 0x7f8608090fb8 <col:26> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
          `-CompoundStmt 0x7f8608092548 <col:32, line:12:9>
            `-BinaryOperator 0x7f8608092528 <line:8:13, line:11:73> 'double' '='
              |-ArraySubscriptExpr 0x7f86080910d0 <line:8:13, col:19> 'double' lvalue
              | |-ImplicitCastExpr 0x7f86080910a0 <col:13, col:16> 'double *' <ArrayToPointerDecay>
              | | `-ArraySubscriptExpr 0x7f8608091060 <col:13, col:16> 'double [m]' lvalue
              | |   |-ImplicitCastExpr 0x7f8608091030 <col:13> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
              | |   | `-DeclRefExpr 0x7f8608090ff0 <col:13> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
              | |   `-ImplicitCastExpr 0x7f8608091048 <col:15> 'int' <LValueToRValue>
              | |     `-DeclRefExpr 0x7f8608091010 <col:15> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
              | `-ImplicitCastExpr 0x7f86080910b8 <col:18> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x7f8608091080 <col:18> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
              `-BinaryOperator 0x7f8608092508 <col:24, line:11:73> 'double' '+'
                |-BinaryOperator 0x7f8608091298 <line:8:24, col:37> 'double' '*'
                | |-ImplicitCastExpr 0x7f8608091268 <col:24, col:27> 'double' <LValueToRValue>
                | | `-ArraySubscriptExpr 0x7f8608091148 <col:24, col:27> 'double' lvalue
                | |   |-ImplicitCastExpr 0x7f8608091130 <col:24> 'double *':'double *' <LValueToRValue>
                | |   | `-DeclRefExpr 0x7f86080910f0 <col:24> 'double *':'double *' lvalue ParmVar 0x7f86080909e0 'y' 'double *':'double *'
                | |   `-IntegerLiteral 0x7f8608091110 <col:26> 'int' 0
                | `-ImplicitCastExpr 0x7f8608091280 <col:31, col:37> 'double' <LValueToRValue>
                |   `-ArraySubscriptExpr 0x7f8608091248 <col:31, col:37> 'double' lvalue
                |     |-ImplicitCastExpr 0x7f8608091218 <col:31, col:34> 'double *' <ArrayToPointerDecay>
                |     | `-ArraySubscriptExpr 0x7f86080911d8 <col:31, col:34> 'double [m]' lvalue
                |     |   |-ImplicitCastExpr 0x7f86080911a8 <col:31> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                |     |   | `-DeclRefExpr 0x7f8608091168 <col:31> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
                |     |   `-ImplicitCastExpr 0x7f86080911c0 <col:33> 'int' <LValueToRValue>
                |     |     `-DeclRefExpr 0x7f8608091188 <col:33> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
                |     `-ImplicitCastExpr 0x7f8608091230 <col:36> 'int' <LValueToRValue>
                |       `-DeclRefExpr 0x7f86080911f8 <col:36> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
                `-ParenExpr 0x7f86080924e8 <line:9:14, line:11:73> 'double'
                  `-BinaryOperator 0x7f86080924c8 <line:9:15, line:11:72> 'double' '+'
                    |-BinaryOperator 0x7f8608092260 <line:9:15, line:11:51> 'double' '+'
                    | |-BinaryOperator 0x7f8608092038 <line:9:15, line:11:32> 'double' '+'
                    | | |-BinaryOperator 0x7f8608091dd0 <line:9:15, line:10:70> 'double' '+'
                    | | | |-BinaryOperator 0x7f8608091ba8 <line:9:15, line:10:30> 'double' '+'
                    | | | | |-BinaryOperator 0x7f8608091980 <line:9:15, col:72> 'double' '+'
                    | | | | | |-BinaryOperator 0x7f8608091718 <col:15, col:51> 'double' '+'
                    | | | | | | |-BinaryOperator 0x7f86080914e0 <col:15, col:32> 'double' '*'
                    | | | | | | | |-ImplicitCastExpr 0x7f86080914b0 <col:15, col:18> 'double' <LValueToRValue>
                    | | | | | | | | `-ArraySubscriptExpr 0x7f8608091310 <col:15, col:18> 'double' lvalue
                    | | | | | | | |   |-ImplicitCastExpr 0x7f86080912f8 <col:15> 'double *':'double *' <LValueToRValue>
                    | | | | | | | |   | `-DeclRefExpr 0x7f86080912b8 <col:15> 'double *':'double *' lvalue ParmVar 0x7f86080909e0 'y' 'double *':'double *'
                    | | | | | | | |   `-IntegerLiteral 0x7f86080912d8 <col:17> 'int' 1
                    | | | | | | | `-ImplicitCastExpr 0x7f86080914c8 <col:22, col:32> 'double' <LValueToRValue>
                    | | | | | | |   `-ArraySubscriptExpr 0x7f8608091490 <col:22, col:32> 'double' lvalue
                    | | | | | | |     |-ImplicitCastExpr 0x7f8608091478 <col:22, col:27> 'double *' <ArrayToPointerDecay>
                    | | | | | | |     | `-ArraySubscriptExpr 0x7f86080913e0 <col:22, col:27> 'double [m]' lvalue
                    | | | | | | |     |   |-ImplicitCastExpr 0x7f86080913c8 <col:22> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                    | | | | | | |     |   | `-DeclRefExpr 0x7f8608091330 <col:22> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
                    | | | | | | |     |   `-BinaryOperator 0x7f86080913a8 <col:24, col:26> 'int' '-'
                    | | | | | | |     |     |-ImplicitCastExpr 0x7f8608091390 <col:24> 'int' <LValueToRValue>
                    | | | | | | |     |     | `-DeclRefExpr 0x7f8608091350 <col:24> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
                    | | | | | | |     |     `-IntegerLiteral 0x7f8608091370 <col:26> 'int' 1
                    | | | | | | |     `-BinaryOperator 0x7f8608091458 <col:29, col:31> 'int' '-'
                    | | | | | | |       |-ImplicitCastExpr 0x7f8608091440 <col:29> 'int' <LValueToRValue>
                    | | | | | | |       | `-DeclRefExpr 0x7f8608091400 <col:29> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
                    | | | | | | |       `-IntegerLiteral 0x7f8608091420 <col:31> 'int' 1
                    | | | | | | `-BinaryOperator 0x7f86080916f8 <col:36, col:51> 'double' '*'
                    | | | | | |   |-ImplicitCastExpr 0x7f86080916c8 <col:36, col:39> 'double' <LValueToRValue>
                    | | | | | |   | `-ArraySubscriptExpr 0x7f8608091558 <col:36, col:39> 'double' lvalue
                    | | | | | |   |   |-ImplicitCastExpr 0x7f8608091540 <col:36> 'double *':'double *' <LValueToRValue>
                    | | | | | |   |   | `-DeclRefExpr 0x7f8608091500 <col:36> 'double *':'double *' lvalue ParmVar 0x7f86080909e0 'y' 'double *':'double *'
                    | | | | | |   |   `-IntegerLiteral 0x7f8608091520 <col:38> 'int' 2
                    | | | | | |   `-ImplicitCastExpr 0x7f86080916e0 <col:43, col:51> 'double' <LValueToRValue>
                    | | | | | |     `-ArraySubscriptExpr 0x7f86080916a8 <col:43, col:51> 'double' lvalue
                    | | | | | |       |-ImplicitCastExpr 0x7f8608091678 <col:43, col:48> 'double *' <ArrayToPointerDecay>
                    | | | | | |       | `-ArraySubscriptExpr 0x7f8608091638 <col:43, col:48> 'double [m]' lvalue
                    | | | | | |       |   |-ImplicitCastExpr 0x7f8608091620 <col:43> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                    | | | | | |       |   | `-DeclRefExpr 0x7f8608091578 <col:43> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
                    | | | | | |       |   `-BinaryOperator 0x7f8608091600 <col:45, col:47> 'int' '-'
                    | | | | | |       |     |-ImplicitCastExpr 0x7f86080915d8 <col:45> 'int' <LValueToRValue>
                    | | | | | |       |     | `-DeclRefExpr 0x7f8608091598 <col:45> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
                    | | | | | |       |     `-IntegerLiteral 0x7f86080915b8 <col:47> 'int' 1
                    | | | | | |       `-ImplicitCastExpr 0x7f8608091690 <col:50> 'int' <LValueToRValue>
                    | | | | | |         `-DeclRefExpr 0x7f8608091658 <col:50> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
                    | | | | | `-BinaryOperator 0x7f8608091960 <col:55, col:72> 'double' '*'
                    | | | | |   |-ImplicitCastExpr 0x7f8608091930 <col:55, col:58> 'double' <LValueToRValue>
                    | | | | |   | `-ArraySubscriptExpr 0x7f8608091790 <col:55, col:58> 'double' lvalue
                    | | | | |   |   |-ImplicitCastExpr 0x7f8608091778 <col:55> 'double *':'double *' <LValueToRValue>
                    | | | | |   |   | `-DeclRefExpr 0x7f8608091738 <col:55> 'double *':'double *' lvalue ParmVar 0x7f86080909e0 'y' 'double *':'double *'
                    | | | | |   |   `-IntegerLiteral 0x7f8608091758 <col:57> 'int' 3
                    | | | | |   `-ImplicitCastExpr 0x7f8608091948 <col:62, col:72> 'double' <LValueToRValue>
                    | | | | |     `-ArraySubscriptExpr 0x7f8608091910 <col:62, col:72> 'double' lvalue
                    | | | | |       |-ImplicitCastExpr 0x7f86080918f8 <col:62, col:67> 'double *' <ArrayToPointerDecay>
                    | | | | |       | `-ArraySubscriptExpr 0x7f8608091860 <col:62, col:67> 'double [m]' lvalue
                    | | | | |       |   |-ImplicitCastExpr 0x7f8608091848 <col:62> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                    | | | | |       |   | `-DeclRefExpr 0x7f86080917b0 <col:62> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
                    | | | | |       |   `-BinaryOperator 0x7f8608091828 <col:64, col:66> 'int' '-'
                    | | | | |       |     |-ImplicitCastExpr 0x7f8608091810 <col:64> 'int' <LValueToRValue>
                    | | | | |       |     | `-DeclRefExpr 0x7f86080917d0 <col:64> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
                    | | | | |       |     `-IntegerLiteral 0x7f86080917f0 <col:66> 'int' 1
                    | | | | |       `-BinaryOperator 0x7f86080918d8 <col:69, col:71> 'int' '+'
                    | | | | |         |-ImplicitCastExpr 0x7f86080918c0 <col:69> 'int' <LValueToRValue>
                    | | | | |         | `-DeclRefExpr 0x7f8608091880 <col:69> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
                    | | | | |         `-IntegerLiteral 0x7f86080918a0 <col:71> 'int' 1
                    | | | | `-BinaryOperator 0x7f8608091b88 <line:10:15, col:30> 'double' '*'
                    | | | |   |-ImplicitCastExpr 0x7f8608091b58 <col:15, col:18> 'double' <LValueToRValue>
                    | | | |   | `-ArraySubscriptExpr 0x7f86080919f8 <col:15, col:18> 'double' lvalue
                    | | | |   |   |-ImplicitCastExpr 0x7f86080919e0 <col:15> 'double *':'double *' <LValueToRValue>
                    | | | |   |   | `-DeclRefExpr 0x7f86080919a0 <col:15> 'double *':'double *' lvalue ParmVar 0x7f86080909e0 'y' 'double *':'double *'
                    | | | |   |   `-IntegerLiteral 0x7f86080919c0 <col:17> 'int' 4
                    | | | |   `-ImplicitCastExpr 0x7f8608091b70 <col:22, col:30> 'double' <LValueToRValue>
                    | | | |     `-ArraySubscriptExpr 0x7f8608091b38 <col:22, col:30> 'double' lvalue
                    | | | |       |-ImplicitCastExpr 0x7f8608091b20 <col:22, col:25> 'double *' <ArrayToPointerDecay>
                    | | | |       | `-ArraySubscriptExpr 0x7f8608091a88 <col:22, col:25> 'double [m]' lvalue
                    | | | |       |   |-ImplicitCastExpr 0x7f8608091a58 <col:22> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                    | | | |       |   | `-DeclRefExpr 0x7f8608091a18 <col:22> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
                    | | | |       |   `-ImplicitCastExpr 0x7f8608091a70 <col:24> 'int' <LValueToRValue>
                    | | | |       |     `-DeclRefExpr 0x7f8608091a38 <col:24> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
                    | | | |       `-BinaryOperator 0x7f8608091b00 <col:27, col:29> 'int' '-'
                    | | | |         |-ImplicitCastExpr 0x7f8608091ae8 <col:27> 'int' <LValueToRValue>
                    | | | |         | `-DeclRefExpr 0x7f8608091aa8 <col:27> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
                    | | | |         `-IntegerLiteral 0x7f8608091ac8 <col:29> 'int' 1
                    | | | `-BinaryOperator 0x7f8608091db0 <col:55, col:70> 'double' '*'
                    | | |   |-ImplicitCastExpr 0x7f8608091d80 <col:55, col:58> 'double' <LValueToRValue>
                    | | |   | `-ArraySubscriptExpr 0x7f8608091c20 <col:55, col:58> 'double' lvalue
                    | | |   |   |-ImplicitCastExpr 0x7f8608091c08 <col:55> 'double *':'double *' <LValueToRValue>
                    | | |   |   | `-DeclRefExpr 0x7f8608091bc8 <col:55> 'double *':'double *' lvalue ParmVar 0x7f86080909e0 'y' 'double *':'double *'
                    | | |   |   `-IntegerLiteral 0x7f8608091be8 <col:57> 'int' 5
                    | | |   `-ImplicitCastExpr 0x7f8608091d98 <col:62, col:70> 'double' <LValueToRValue>
                    | | |     `-ArraySubscriptExpr 0x7f8608091d60 <col:62, col:70> 'double' lvalue
                    | | |       |-ImplicitCastExpr 0x7f8608091d48 <col:62, col:65> 'double *' <ArrayToPointerDecay>
                    | | |       | `-ArraySubscriptExpr 0x7f8608091cb0 <col:62, col:65> 'double [m]' lvalue
                    | | |       |   |-ImplicitCastExpr 0x7f8608091c80 <col:62> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                    | | |       |   | `-DeclRefExpr 0x7f8608091c40 <col:62> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
                    | | |       |   `-ImplicitCastExpr 0x7f8608091c98 <col:64> 'int' <LValueToRValue>
                    | | |       |     `-DeclRefExpr 0x7f8608091c60 <col:64> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
                    | | |       `-BinaryOperator 0x7f8608091d28 <col:67, col:69> 'int' '+'
                    | | |         |-ImplicitCastExpr 0x7f8608091d10 <col:67> 'int' <LValueToRValue>
                    | | |         | `-DeclRefExpr 0x7f8608091cd0 <col:67> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
                    | | |         `-IntegerLiteral 0x7f8608091cf0 <col:69> 'int' 1
                    | | `-BinaryOperator 0x7f8608092018 <line:11:15, col:32> 'double' '*'
                    | |   |-ImplicitCastExpr 0x7f8608091fe8 <col:15, col:18> 'double' <LValueToRValue>
                    | |   | `-ArraySubscriptExpr 0x7f8608091e48 <col:15, col:18> 'double' lvalue
                    | |   |   |-ImplicitCastExpr 0x7f8608091e30 <col:15> 'double *':'double *' <LValueToRValue>
                    | |   |   | `-DeclRefExpr 0x7f8608091df0 <col:15> 'double *':'double *' lvalue ParmVar 0x7f86080909e0 'y' 'double *':'double *'
                    | |   |   `-IntegerLiteral 0x7f8608091e10 <col:17> 'int' 6
                    | |   `-ImplicitCastExpr 0x7f8608092000 <col:22, col:32> 'double' <LValueToRValue>
                    | |     `-ArraySubscriptExpr 0x7f8608091fc8 <col:22, col:32> 'double' lvalue
                    | |       |-ImplicitCastExpr 0x7f8608091fb0 <col:22, col:27> 'double *' <ArrayToPointerDecay>
                    | |       | `-ArraySubscriptExpr 0x7f8608091f18 <col:22, col:27> 'double [m]' lvalue
                    | |       |   |-ImplicitCastExpr 0x7f8608091f00 <col:22> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                    | |       |   | `-DeclRefExpr 0x7f8608091e68 <col:22> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
                    | |       |   `-BinaryOperator 0x7f8608091ee0 <col:24, col:26> 'int' '+'
                    | |       |     |-ImplicitCastExpr 0x7f8608091ec8 <col:24> 'int' <LValueToRValue>
                    | |       |     | `-DeclRefExpr 0x7f8608091e88 <col:24> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
                    | |       |     `-IntegerLiteral 0x7f8608091ea8 <col:26> 'int' 1
                    | |       `-BinaryOperator 0x7f8608091f90 <col:29, col:31> 'int' '-'
                    | |         |-ImplicitCastExpr 0x7f8608091f78 <col:29> 'int' <LValueToRValue>
                    | |         | `-DeclRefExpr 0x7f8608091f38 <col:29> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
                    | |         `-IntegerLiteral 0x7f8608091f58 <col:31> 'int' 1
                    | `-BinaryOperator 0x7f8608092240 <col:36, col:51> 'double' '*'
                    |   |-ImplicitCastExpr 0x7f8608092210 <col:36, col:39> 'double' <LValueToRValue>
                    |   | `-ArraySubscriptExpr 0x7f86080920b0 <col:36, col:39> 'double' lvalue
                    |   |   |-ImplicitCastExpr 0x7f8608092098 <col:36> 'double *':'double *' <LValueToRValue>
                    |   |   | `-DeclRefExpr 0x7f8608092058 <col:36> 'double *':'double *' lvalue ParmVar 0x7f86080909e0 'y' 'double *':'double *'
                    |   |   `-IntegerLiteral 0x7f8608092078 <col:38> 'int' 7
                    |   `-ImplicitCastExpr 0x7f8608092228 <col:43, col:51> 'double' <LValueToRValue>
                    |     `-ArraySubscriptExpr 0x7f86080921f0 <col:43, col:51> 'double' lvalue
                    |       |-ImplicitCastExpr 0x7f86080921c0 <col:43, col:48> 'double *' <ArrayToPointerDecay>
                    |       | `-ArraySubscriptExpr 0x7f8608092180 <col:43, col:48> 'double [m]' lvalue
                    |       |   |-ImplicitCastExpr 0x7f8608092168 <col:43> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                    |       |   | `-DeclRefExpr 0x7f86080920d0 <col:43> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
                    |       |   `-BinaryOperator 0x7f8608092148 <col:45, col:47> 'int' '+'
                    |       |     |-ImplicitCastExpr 0x7f8608092130 <col:45> 'int' <LValueToRValue>
                    |       |     | `-DeclRefExpr 0x7f86080920f0 <col:45> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
                    |       |     `-IntegerLiteral 0x7f8608092110 <col:47> 'int' 1
                    |       `-ImplicitCastExpr 0x7f86080921d8 <col:50> 'int' <LValueToRValue>
                    |         `-DeclRefExpr 0x7f86080921a0 <col:50> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
                    `-BinaryOperator 0x7f86080924a8 <col:55, col:72> 'double' '*'
                      |-ImplicitCastExpr 0x7f8608092478 <col:55, col:58> 'double' <LValueToRValue>
                      | `-ArraySubscriptExpr 0x7f86080922d8 <col:55, col:58> 'double' lvalue
                      |   |-ImplicitCastExpr 0x7f86080922c0 <col:55> 'double *':'double *' <LValueToRValue>
                      |   | `-DeclRefExpr 0x7f8608092280 <col:55> 'double *':'double *' lvalue ParmVar 0x7f86080909e0 'y' 'double *':'double *'
                      |   `-IntegerLiteral 0x7f86080922a0 <col:57> 'int' 8
                      `-ImplicitCastExpr 0x7f8608092490 <col:62, col:72> 'double' <LValueToRValue>
                        `-ArraySubscriptExpr 0x7f8608092458 <col:62, col:72> 'double' lvalue
                          |-ImplicitCastExpr 0x7f8608092440 <col:62, col:67> 'double *' <ArrayToPointerDecay>
                          | `-ArraySubscriptExpr 0x7f86080923a8 <col:62, col:67> 'double [m]' lvalue
                          |   |-ImplicitCastExpr 0x7f8608092390 <col:62> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
                          |   | `-DeclRefExpr 0x7f86080922f8 <col:62> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f8608090880 'x' 'double (*)[m]':'double (*)[m]'
                          |   `-BinaryOperator 0x7f8608092370 <col:64, col:66> 'int' '+'
                          |     |-ImplicitCastExpr 0x7f8608092358 <col:64> 'int' <LValueToRValue>
                          |     | `-DeclRefExpr 0x7f8608092318 <col:64> 'int' lvalue Var 0x7f8608090cb8 'i' 'int'
                          |     `-IntegerLiteral 0x7f8608092338 <col:66> 'int' 1
                          `-BinaryOperator 0x7f8608092420 <col:69, col:71> 'int' '+'
                            |-ImplicitCastExpr 0x7f8608092408 <col:69> 'int' <LValueToRValue>
                            | `-DeclRefExpr 0x7f86080923c8 <col:69> 'int' lvalue Var 0x7f8608090d38 'j' 'int'
                            `-IntegerLiteral 0x7f86080923e8 <col:71> 'int' 1
