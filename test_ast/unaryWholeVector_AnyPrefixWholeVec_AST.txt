TranslationUnitDecl 0x7fa5ad016e08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fa5ad0176a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fa5ad0173a0 '__int128'
|-TypedefDecl 0x7fa5ad017710 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fa5ad0173c0 'unsigned __int128'
|-TypedefDecl 0x7fa5ad0179f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fa5ad0177f0 'struct __NSConstantString_tag'
|   `-Record 0x7fa5ad017768 '__NSConstantString_tag'
|-TypedefDecl 0x7fa5ad017a90 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fa5ad017a50 'char *'
|   `-BuiltinType 0x7fa5ad016ea0 'char'
|-TypedefDecl 0x7fa5ad017d68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fa5ad017d10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fa5ad017b70 'struct __va_list_tag'
|     `-Record 0x7fa5ad017ae8 '__va_list_tag'
|-TypedefDecl 0x7fa5ad82f200 <./tree_src/unaryWholeVector_AnyPrefixWholeVec.c:4:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7fa5ad016f60 'unsigned char'
`-FunctionDecl 0x7fa5ad82f738 <line:10:1, line:18:1> line:10:6 AnyPrefixWholeVec 'void (int, BOOL *, BOOL *)'
  |-ParmVarDecl 0x7fa5ad82f270 <line:11:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fa5ad82f480 <col:12, col:20> col:17 used x 'BOOL *':'BOOL *'
  |-ParmVarDecl 0x7fa5ad82f610 <col:23, col:31> col:28 used y 'BOOL *':'BOOL *'
  `-CompoundStmt 0x7fa5ad82fe18 <col:35, line:18:1>
    |-DeclStmt 0x7fa5ad82f8b8 <line:13:5, col:10>
    | `-VarDecl 0x7fa5ad82f850 <col:5, col:9> col:9 used i 'int'
    |-BinaryOperator 0x7fa5ad82f9d8 <line:14:5, col:15> 'BOOL':'unsigned char' '='
    | |-ArraySubscriptExpr 0x7fa5ad82f928 <col:5, col:8> 'BOOL':'unsigned char' lvalue
    | | |-ImplicitCastExpr 0x7fa5ad82f910 <col:5> 'BOOL *':'BOOL *' <LValueToRValue>
    | | | `-DeclRefExpr 0x7fa5ad82f8d0 <col:5> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fa5ad82f610 'y' 'BOOL *':'BOOL *'
    | | `-IntegerLiteral 0x7fa5ad82f8f0 <col:7> 'int' 0
    | `-ImplicitCastExpr 0x7fa5ad82f9c0 <col:12, col:15> 'BOOL':'unsigned char' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x7fa5ad82f9a0 <col:12, col:15> 'BOOL':'unsigned char' lvalue
    |     |-ImplicitCastExpr 0x7fa5ad82f988 <col:12> 'BOOL *':'BOOL *' <LValueToRValue>
    |     | `-DeclRefExpr 0x7fa5ad82f948 <col:12> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fa5ad82f480 'x' 'BOOL *':'BOOL *'
    |     `-IntegerLiteral 0x7fa5ad82f968 <col:14> 'int' 0
    `-ForStmt 0x7fa5ad82fde0 <line:15:5, line:17:5>
      |-BinaryOperator 0x7fa5ad82fa38 <line:15:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7fa5ad82f9f8 <col:10> 'int' lvalue Var 0x7fa5ad82f850 'i' 'int'
      | `-IntegerLiteral 0x7fa5ad82fa18 <col:13> 'int' 1
      |-<<<NULL>>>
      |-BinaryOperator 0x7fa5ad82fac8 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7fa5ad82fa98 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fa5ad82fa58 <col:16> 'int' lvalue Var 0x7fa5ad82f850 'i' 'int'
      | `-ImplicitCastExpr 0x7fa5ad82fab0 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7fa5ad82fa78 <col:18> 'int' lvalue ParmVar 0x7fa5ad82f270 'n' 'int'
      |-UnaryOperator 0x7fa5ad82fb08 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x7fa5ad82fae8 <col:21> 'int' lvalue Var 0x7fa5ad82f850 'i' 'int'
      `-CompoundStmt 0x7fa5ad82fdc8 <col:27, line:17:5>
        `-BinaryOperator 0x7fa5ad82fda8 <line:16:9, col:28> 'BOOL':'unsigned char' '='
          |-ArraySubscriptExpr 0x7fa5ad82fb90 <col:9, col:12> 'BOOL':'unsigned char' lvalue
          | |-ImplicitCastExpr 0x7fa5ad82fb60 <col:9> 'BOOL *':'BOOL *' <LValueToRValue>
          | | `-DeclRefExpr 0x7fa5ad82fb20 <col:9> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fa5ad82f610 'y' 'BOOL *':'BOOL *'
          | `-ImplicitCastExpr 0x7fa5ad82fb78 <col:11> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7fa5ad82fb40 <col:11> 'int' lvalue Var 0x7fa5ad82f850 'i' 'int'
          `-ImplicitCastExpr 0x7fa5ad82fd90 <col:16, col:28> 'BOOL':'unsigned char' <IntegralCast>
            `-BinaryOperator 0x7fa5ad82fd70 <col:16, col:28> 'int' '|'
              |-ImplicitCastExpr 0x7fa5ad82fd28 <col:16, col:21> 'int' <IntegralCast>
              | `-ImplicitCastExpr 0x7fa5ad82fd10 <col:16, col:21> 'BOOL':'unsigned char' <LValueToRValue>
              |   `-ArraySubscriptExpr 0x7fa5ad82fc60 <col:16, col:21> 'BOOL':'unsigned char' lvalue
              |     |-ImplicitCastExpr 0x7fa5ad82fc48 <col:16> 'BOOL *':'BOOL *' <LValueToRValue>
              |     | `-DeclRefExpr 0x7fa5ad82fbb0 <col:16> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fa5ad82f610 'y' 'BOOL *':'BOOL *'
              |     `-BinaryOperator 0x7fa5ad82fc28 <col:18, col:20> 'int' '-'
              |       |-ImplicitCastExpr 0x7fa5ad82fc10 <col:18> 'int' <LValueToRValue>
              |       | `-DeclRefExpr 0x7fa5ad82fbd0 <col:18> 'int' lvalue Var 0x7fa5ad82f850 'i' 'int'
              |       `-IntegerLiteral 0x7fa5ad82fbf0 <col:20> 'int' 1
              `-ImplicitCastExpr 0x7fa5ad82fd58 <col:25, col:28> 'int' <IntegralCast>
                `-ImplicitCastExpr 0x7fa5ad82fd40 <col:25, col:28> 'BOOL':'unsigned char' <LValueToRValue>
                  `-ArraySubscriptExpr 0x7fa5ad82fcf0 <col:25, col:28> 'BOOL':'unsigned char' lvalue
                    |-ImplicitCastExpr 0x7fa5ad82fcc0 <col:25> 'BOOL *':'BOOL *' <LValueToRValue>
                    | `-DeclRefExpr 0x7fa5ad82fc80 <col:25> 'BOOL *':'BOOL *' lvalue ParmVar 0x7fa5ad82f480 'x' 'BOOL *':'BOOL *'
                    `-ImplicitCastExpr 0x7fa5ad82fcd8 <col:27> 'int' <LValueToRValue>
                      `-DeclRefExpr 0x7fa5ad82fca0 <col:27> 'int' lvalue Var 0x7fa5ad82f850 'i' 'int'
