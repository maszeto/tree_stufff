TranslationUnitDecl 0x7f8931838c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f89318394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f89318391a0 '__int128'
|-TypedefDecl 0x7f8931839510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f89318391c0 'unsigned __int128'
|-TypedefDecl 0x7f89318397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f89318395f0 'struct __NSConstantString_tag'
|   `-Record 0x7f8931839568 '__NSConstantString_tag'
|-TypedefDecl 0x7f8931839890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f8931839850 'char *'
|   `-BuiltinType 0x7f8931838ca0 'char'
|-TypedefDecl 0x7f8931839b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f8931839b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f8931839970 'struct __va_list_tag'
|     `-Record 0x7f89318398e8 '__va_list_tag'
|-TypedefDecl 0x7f893202f200 <./tree_src/unaryWholeMatrix_SumWholeLastMat.c:4:1, col:23> col:23 BOOL 'unsigned char'
| `-BuiltinType 0x7f8931838d60 'unsigned char'
`-FunctionDecl 0x7f893202f828 <line:12:1, line:24:1> line:12:6 SumWholeLastMat 'void (int, int, double (*)[m], double *)'
  |-ParmVarDecl 0x7f893202f270 <line:13:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7f893202f2f0 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7f893202f4f0 <col:19, col:32> col:26 used x 'double (*)[m]':'double (*)[m]'
  |-ParmVarDecl 0x7f893202f670 <col:35, col:45> col:42 used z 'double *':'double *'
  `-CompoundStmt 0x7f89320300a8 <col:49, line:24:1>
    |-DeclStmt 0x7f893202fa48 <line:15:5, col:13>
    | |-VarDecl 0x7f893202f948 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x7f893202f9c8 <col:5, col:12> col:12 used j 'int'
    |-DeclStmt 0x7f893202fae0 <line:16:5, col:15>
    | `-VarDecl 0x7f893202fa78 <col:5, col:12> col:12 used val 'double'
    `-ForStmt 0x7f8932030070 <line:17:5, line:23:5>
      |-BinaryOperator 0x7f893202fb38 <line:17:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7f893202faf8 <col:10> 'int' lvalue Var 0x7f893202f948 'i' 'int'
      | `-IntegerLiteral 0x7f893202fb18 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7f893202fbc8 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7f893202fb98 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7f893202fb58 <col:16> 'int' lvalue Var 0x7f893202f948 'i' 'int'
      | `-ImplicitCastExpr 0x7f893202fbb0 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7f893202fb78 <col:18> 'int' lvalue ParmVar 0x7f893202f270 'n' 'int'
      |-UnaryOperator 0x7f893202fc08 <col:21, col:22> 'int' postfix '++'
      | `-DeclRefExpr 0x7f893202fbe8 <col:21> 'int' lvalue Var 0x7f893202f948 'i' 'int'
      `-CompoundStmt 0x7f8932030050 <col:27, line:23:5>
        |-ForStmt 0x7f893202ff30 <line:19:9, line:21:9>
        | |-BinaryOperator 0x7f893202fc80 <line:19:14, col:17> 'int' '='
        | | |-DeclRefExpr 0x7f893202fc40 <col:14> 'int' lvalue Var 0x7f893202f9c8 'j' 'int'
        | | `-IntegerLiteral 0x7f893202fc60 <col:17> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x7f893202fd10 <col:20, col:22> 'int' '<'
        | | |-ImplicitCastExpr 0x7f893202fce0 <col:20> 'int' <LValueToRValue>
        | | | `-DeclRefExpr 0x7f893202fca0 <col:20> 'int' lvalue Var 0x7f893202f9c8 'j' 'int'
        | | `-ImplicitCastExpr 0x7f893202fcf8 <col:22> 'int' <LValueToRValue>
        | |   `-DeclRefExpr 0x7f893202fcc0 <col:22> 'int' lvalue ParmVar 0x7f893202f2f0 'm' 'int'
        | |-UnaryOperator 0x7f893202fd50 <col:25, col:26> 'int' postfix '++'
        | | `-DeclRefExpr 0x7f893202fd30 <col:25> 'int' lvalue Var 0x7f893202f9c8 'j' 'int'
        | `-CompoundStmt 0x7f893202ff18 <col:31, line:21:9>
        |   `-BinaryOperator 0x7f893202fef8 <line:20:6, col:24> 'double' '='
        |     |-DeclRefExpr 0x7f893202fd68 <col:6> 'double' lvalue Var 0x7f893202fa78 'val' 'double'
        |     `-BinaryOperator 0x7f893202fed8 <col:12, col:24> 'double' '+'
        |       |-ImplicitCastExpr 0x7f893202fea8 <col:12> 'double' <LValueToRValue>
        |       | `-DeclRefExpr 0x7f893202fd88 <col:12> 'double' lvalue Var 0x7f893202fa78 'val' 'double'
        |       `-ImplicitCastExpr 0x7f893202fec0 <col:18, col:24> 'double' <LValueToRValue>
        |         `-ArraySubscriptExpr 0x7f893202fe88 <col:18, col:24> 'double' lvalue
        |           |-ImplicitCastExpr 0x7f893202fe58 <col:18, col:21> 'double *' <ArrayToPointerDecay>
        |           | `-ArraySubscriptExpr 0x7f893202fe18 <col:18, col:21> 'double [m]' lvalue
        |           |   |-ImplicitCastExpr 0x7f893202fde8 <col:18> 'double (*)[m]':'double (*)[m]' <LValueToRValue>
        |           |   | `-DeclRefExpr 0x7f893202fda8 <col:18> 'double (*)[m]':'double (*)[m]' lvalue ParmVar 0x7f893202f4f0 'x' 'double (*)[m]':'double (*)[m]'
        |           |   `-ImplicitCastExpr 0x7f893202fe00 <col:20> 'int' <LValueToRValue>
        |           |     `-DeclRefExpr 0x7f893202fdc8 <col:20> 'int' lvalue Var 0x7f893202f948 'i' 'int'
        |           `-ImplicitCastExpr 0x7f893202fe70 <col:23> 'int' <LValueToRValue>
        |             `-DeclRefExpr 0x7f893202fe38 <col:23> 'int' lvalue Var 0x7f893202f9c8 'j' 'int'
        `-BinaryOperator 0x7f8932030030 <line:22:9, col:16> 'double' '='
          |-ArraySubscriptExpr 0x7f893202ffd8 <col:9, col:12> 'double' lvalue
          | |-ImplicitCastExpr 0x7f893202ffa8 <col:9> 'double *':'double *' <LValueToRValue>
          | | `-DeclRefExpr 0x7f893202ff68 <col:9> 'double *':'double *' lvalue ParmVar 0x7f893202f670 'z' 'double *':'double *'
          | `-ImplicitCastExpr 0x7f893202ffc0 <col:11> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7f893202ff88 <col:11> 'int' lvalue Var 0x7f893202f948 'i' 'int'
          `-ImplicitCastExpr 0x7f8932030018 <col:16> 'double' <LValueToRValue>
            `-DeclRefExpr 0x7f893202fff8 <col:16> 'double' lvalue Var 0x7f893202fa78 'val' 'double'
