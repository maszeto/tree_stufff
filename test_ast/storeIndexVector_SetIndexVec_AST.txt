TranslationUnitDecl 0x7fe530038c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fe5300394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fe5300391a0 '__int128'
|-TypedefDecl 0x7fe530039510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fe5300391c0 'unsigned __int128'
|-TypedefDecl 0x7fe5300397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fe5300395f0 'struct __NSConstantString_tag'
|   `-Record 0x7fe530039568 '__NSConstantString_tag'
|-TypedefDecl 0x7fe530039890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fe530039850 'char *'
|   `-BuiltinType 0x7fe530038ca0 'char'
|-TypedefDecl 0x7fe530039b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fe530039b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fe530039970 'struct __va_list_tag'
|     `-Record 0x7fe5300398e8 '__va_list_tag'
`-FunctionDecl 0x7fe53082e8f8 <./tree_src/storeIndexVector_SetIndexVec.c:1:1, line:8:1> line:1:6 SetIndexVec 'void (int, double *, double *, int *, int *)'
  |-ParmVarDecl 0x7fe53082e200 <line:2:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7fe53082e380 <col:12, col:22> col:19 used x 'double *':'double *'
  |-ParmVarDecl 0x7fe53082e4d0 <col:25, col:35> col:32 used z 'double *':'double *'
  |-ParmVarDecl 0x7fe53082e650 <col:38, col:46> col:42 used ix 'int *':'int *'
  |-ParmVarDecl 0x7fe53082e7a0 <col:49, col:57> col:53 used iz 'int *':'int *'
  `-CompoundStmt 0x7fe53082ee50 <col:61, line:8:1>
    |-DeclStmt 0x7fe53082ea88 <line:4:5, col:10>
    | `-VarDecl 0x7fe53082ea20 <col:5, col:9> col:9 used i 'int'
    `-ForStmt 0x7fe53082ee18 <line:5:5, line:7:5>
      |-BinaryOperator 0x7fe53082eae0 <line:5:10, col:13> 'int' '='
      | |-DeclRefExpr 0x7fe53082eaa0 <col:10> 'int' lvalue Var 0x7fe53082ea20 'i' 'int'
      | `-IntegerLiteral 0x7fe53082eac0 <col:13> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7fe53082eb70 <col:16, col:18> 'int' '<'
      | |-ImplicitCastExpr 0x7fe53082eb40 <col:16> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fe53082eb00 <col:16> 'int' lvalue Var 0x7fe53082ea20 'i' 'int'
      | `-ImplicitCastExpr 0x7fe53082eb58 <col:18> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7fe53082eb20 <col:18> 'int' lvalue ParmVar 0x7fe53082e200 'n' 'int'
      |-UnaryOperator 0x7fe53082ebb0 <col:21, col:23> 'int' prefix '++'
      | `-DeclRefExpr 0x7fe53082eb90 <col:23> 'int' lvalue Var 0x7fe53082ea20 'i' 'int'
      `-CompoundStmt 0x7fe53082ee00 <col:27, line:7:5>
        `-BinaryOperator 0x7fe53082ede0 <line:6:9, col:26> 'double' '='
          |-ArraySubscriptExpr 0x7fe53082eca8 <col:9, col:16> 'double' lvalue
          | |-ImplicitCastExpr 0x7fe53082ec78 <col:9> 'double *':'double *' <LValueToRValue>
          | | `-DeclRefExpr 0x7fe53082ebc8 <col:9> 'double *':'double *' lvalue ParmVar 0x7fe53082e4d0 'z' 'double *':'double *'
          | `-ImplicitCastExpr 0x7fe53082ec90 <col:11, col:15> 'int' <LValueToRValue>
          |   `-ArraySubscriptExpr 0x7fe53082ec58 <col:11, col:15> 'int' lvalue
          |     |-ImplicitCastExpr 0x7fe53082ec28 <col:11> 'int *':'int *' <LValueToRValue>
          |     | `-DeclRefExpr 0x7fe53082ebe8 <col:11> 'int *':'int *' lvalue ParmVar 0x7fe53082e7a0 'iz' 'int *':'int *'
          |     `-ImplicitCastExpr 0x7fe53082ec40 <col:14> 'int' <LValueToRValue>
          |       `-DeclRefExpr 0x7fe53082ec08 <col:14> 'int' lvalue Var 0x7fe53082ea20 'i' 'int'
          `-ImplicitCastExpr 0x7fe53082edc8 <col:19, col:26> 'double' <LValueToRValue>
            `-ArraySubscriptExpr 0x7fe53082eda8 <col:19, col:26> 'double' lvalue
              |-ImplicitCastExpr 0x7fe53082ed78 <col:19> 'double *':'double *' <LValueToRValue>
              | `-DeclRefExpr 0x7fe53082ecc8 <col:19> 'double *':'double *' lvalue ParmVar 0x7fe53082e380 'x' 'double *':'double *'
              `-ImplicitCastExpr 0x7fe53082ed90 <col:21, col:25> 'int' <LValueToRValue>
                `-ArraySubscriptExpr 0x7fe53082ed58 <col:21, col:25> 'int' lvalue
                  |-ImplicitCastExpr 0x7fe53082ed28 <col:21> 'int *':'int *' <LValueToRValue>
                  | `-DeclRefExpr 0x7fe53082ece8 <col:21> 'int *':'int *' lvalue ParmVar 0x7fe53082e650 'ix' 'int *':'int *'
                  `-ImplicitCastExpr 0x7fe53082ed40 <col:24> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x7fe53082ed08 <col:24> 'int' lvalue Var 0x7fe53082ea20 'i' 'int'
