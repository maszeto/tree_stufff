TranslationUnitDecl 0x7f98cb038c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f98cb0394a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f98cb0391a0 '__int128'
|-TypedefDecl 0x7f98cb039510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f98cb0391c0 'unsigned __int128'
|-TypedefDecl 0x7f98cb0397f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f98cb0395f0 'struct __NSConstantString_tag'
|   `-Record 0x7f98cb039568 '__NSConstantString_tag'
|-TypedefDecl 0x7f98cb039890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f98cb039850 'char *'
|   `-BuiltinType 0x7f98cb038ca0 'char'
|-TypedefDecl 0x7f98cb039b68 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f98cb039b10 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f98cb039970 'struct __va_list_tag'
|     `-Record 0x7f98cb0398e8 '__va_list_tag'
|-TypedefDecl 0x7f98cb82f200 <./tree_src/dyadicWholeMatrix_AndWholeMat.c:3:1, col:23> col:23 referenced BOOL 'unsigned char'
| `-BuiltinType 0x7f98cb038d60 'unsigned char'
`-FunctionDecl 0x7f98cb82fdc8 <line:6:1, line:15:1> line:6:6 AndWholeMat 'void (int, int, BOOL (*)[m], BOOL (*)[m], BOOL (*)[m])'
  |-ParmVarDecl 0x7f98cb82f270 <line:7:5, col:9> col:9 used n 'int'
  |-ParmVarDecl 0x7f98cb82f2f0 <col:12, col:16> col:16 used m 'int'
  |-ParmVarDecl 0x7f98cb82f5c0 <col:19, col:30> col:24 used x 'BOOL (*)[m]':'BOOL (*)[m]'
  |-ParmVarDecl 0x7f98cb82f870 <col:33, col:44> col:38 used y 'BOOL (*)[m]':'BOOL (*)[m]'
  |-ParmVarDecl 0x7f98cb82fb20 <col:47, col:58> col:52 used z 'BOOL (*)[m]':'BOOL (*)[m]'
  `-CompoundStmt 0x7f98cb831710 <col:62, line:15:1>
    |-DeclStmt 0x7f98cb82fff0 <line:9:5, col:13>
    | |-VarDecl 0x7f98cb82fef0 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x7f98cb82ff70 <col:5, col:12> col:12 used j 'int'
    `-ForStmt 0x7f98cb8316d8 <line:10:5, line:14:5>
      |-BinaryOperator 0x7f98cb830048 <line:10:10, col:12> 'int' '='
      | |-DeclRefExpr 0x7f98cb830008 <col:10> 'int' lvalue Var 0x7f98cb82fef0 'i' 'int'
      | `-IntegerLiteral 0x7f98cb830028 <col:12> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x7f98cb8300d8 <col:15, col:17> 'int' '<'
      | |-ImplicitCastExpr 0x7f98cb8300a8 <col:15> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7f98cb830068 <col:15> 'int' lvalue Var 0x7f98cb82fef0 'i' 'int'
      | `-ImplicitCastExpr 0x7f98cb8300c0 <col:17> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x7f98cb830088 <col:17> 'int' lvalue ParmVar 0x7f98cb82f270 'n' 'int'
      |-UnaryOperator 0x7f98cb830118 <col:20, col:21> 'int' postfix '++'
      | `-DeclRefExpr 0x7f98cb8300f8 <col:20> 'int' lvalue Var 0x7f98cb82fef0 'i' 'int'
      `-CompoundStmt 0x7f98cb8316c0 <col:26, line:14:5>
        `-ForStmt 0x7f98cb831688 <line:11:9, line:13:9>
          |-BinaryOperator 0x7f98cb830170 <line:11:14, col:16> 'int' '='
          | |-DeclRefExpr 0x7f98cb830130 <col:14> 'int' lvalue Var 0x7f98cb82ff70 'j' 'int'
          | `-IntegerLiteral 0x7f98cb830150 <col:16> 'int' 0
          |-<<<NULL>>>
          |-BinaryOperator 0x7f98cb831200 <col:19, col:21> 'int' '<'
          | |-ImplicitCastExpr 0x7f98cb8301d0 <col:19> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x7f98cb830190 <col:19> 'int' lvalue Var 0x7f98cb82ff70 'j' 'int'
          | `-ImplicitCastExpr 0x7f98cb8301e8 <col:21> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x7f98cb8301b0 <col:21> 'int' lvalue ParmVar 0x7f98cb82f2f0 'm' 'int'
          |-UnaryOperator 0x7f98cb831240 <col:24, col:25> 'int' postfix '++'
          | `-DeclRefExpr 0x7f98cb831220 <col:24> 'int' lvalue Var 0x7f98cb82ff70 'j' 'int'
          `-CompoundStmt 0x7f98cb831670 <col:30, line:13:9>
            `-BinaryOperator 0x7f98cb831650 <line:12:6, col:32> 'BOOL':'unsigned char' '='
              |-ArraySubscriptExpr 0x7f98cb831398 <col:6, col:12> 'BOOL':'unsigned char' lvalue
              | |-ImplicitCastExpr 0x7f98cb831368 <col:6, col:9> 'BOOL *' <ArrayToPointerDecay>
              | | `-ArraySubscriptExpr 0x7f98cb8312c8 <col:6, col:9> 'BOOL [m]' lvalue
              | |   |-ImplicitCastExpr 0x7f98cb831298 <col:6> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
              | |   | `-DeclRefExpr 0x7f98cb831258 <col:6> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7f98cb82fb20 'z' 'BOOL (*)[m]':'BOOL (*)[m]'
              | |   `-ImplicitCastExpr 0x7f98cb8312b0 <col:8> 'int' <LValueToRValue>
              | |     `-DeclRefExpr 0x7f98cb831278 <col:8> 'int' lvalue Var 0x7f98cb82fef0 'i' 'int'
              | `-ImplicitCastExpr 0x7f98cb831380 <col:11> 'int' <LValueToRValue>
              |   `-DeclRefExpr 0x7f98cb8312e8 <col:11> 'int' lvalue Var 0x7f98cb82ff70 'j' 'int'
              `-ImplicitCastExpr 0x7f98cb831638 <col:16, col:32> 'BOOL':'unsigned char' <IntegralCast>
                `-BinaryOperator 0x7f98cb831618 <col:16, col:32> 'int' '&'
                  |-ImplicitCastExpr 0x7f98cb8315d0 <col:16, col:22> 'int' <IntegralCast>
                  | `-ImplicitCastExpr 0x7f98cb8315b8 <col:16, col:22> 'BOOL':'unsigned char' <LValueToRValue>
                  |   `-ArraySubscriptExpr 0x7f98cb831498 <col:16, col:22> 'BOOL':'unsigned char' lvalue
                  |     |-ImplicitCastExpr 0x7f98cb831468 <col:16, col:19> 'BOOL *' <ArrayToPointerDecay>
                  |     | `-ArraySubscriptExpr 0x7f98cb831428 <col:16, col:19> 'BOOL [m]' lvalue
                  |     |   |-ImplicitCastExpr 0x7f98cb8313f8 <col:16> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
                  |     |   | `-DeclRefExpr 0x7f98cb8313b8 <col:16> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7f98cb82f5c0 'x' 'BOOL (*)[m]':'BOOL (*)[m]'
                  |     |   `-ImplicitCastExpr 0x7f98cb831410 <col:18> 'int' <LValueToRValue>
                  |     |     `-DeclRefExpr 0x7f98cb8313d8 <col:18> 'int' lvalue Var 0x7f98cb82fef0 'i' 'int'
                  |     `-ImplicitCastExpr 0x7f98cb831480 <col:21> 'int' <LValueToRValue>
                  |       `-DeclRefExpr 0x7f98cb831448 <col:21> 'int' lvalue Var 0x7f98cb82ff70 'j' 'int'
                  `-ImplicitCastExpr 0x7f98cb831600 <col:26, col:32> 'int' <IntegralCast>
                    `-ImplicitCastExpr 0x7f98cb8315e8 <col:26, col:32> 'BOOL':'unsigned char' <LValueToRValue>
                      `-ArraySubscriptExpr 0x7f98cb831598 <col:26, col:32> 'BOOL':'unsigned char' lvalue
                        |-ImplicitCastExpr 0x7f98cb831568 <col:26, col:29> 'BOOL *' <ArrayToPointerDecay>
                        | `-ArraySubscriptExpr 0x7f98cb831528 <col:26, col:29> 'BOOL [m]' lvalue
                        |   |-ImplicitCastExpr 0x7f98cb8314f8 <col:26> 'BOOL (*)[m]':'BOOL (*)[m]' <LValueToRValue>
                        |   | `-DeclRefExpr 0x7f98cb8314b8 <col:26> 'BOOL (*)[m]':'BOOL (*)[m]' lvalue ParmVar 0x7f98cb82f870 'y' 'BOOL (*)[m]':'BOOL (*)[m]'
                        |   `-ImplicitCastExpr 0x7f98cb831510 <col:28> 'int' <LValueToRValue>
                        |     `-DeclRefExpr 0x7f98cb8314d8 <col:28> 'int' lvalue Var 0x7f98cb82fef0 'i' 'int'
                        `-ImplicitCastExpr 0x7f98cb831580 <col:31> 'int' <LValueToRValue>
                          `-DeclRefExpr 0x7f98cb831548 <col:31> 'int' lvalue Var 0x7f98cb82ff70 'j' 'int'
